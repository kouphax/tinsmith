{
    "project": {
        "name": "polymer-source-docs",
        "description": "",
        "version": "0.0.1",
        "url": ""
    },
    "files": {
        "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html": {
            "name": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "modules": {},
            "classes": {
                "polymer-ajax": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-ajax\\polymer-xhr.html": {
            "name": "..\\polymer-elements\\polymer-ajax\\polymer-xhr.html",
            "modules": {},
            "classes": {
                "polymer-xhr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-anchor-point\\polymer-anchor-point.html": {
            "name": "..\\polymer-elements\\polymer-anchor-point\\polymer-anchor-point.html",
            "modules": {},
            "classes": {
                "polymer-anchor-point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-animation\\polymer-animation-group.html": {
            "name": "..\\polymer-elements\\polymer-animation\\polymer-animation-group.html",
            "modules": {
                "Animation": 1
            },
            "classes": {
                "polymer-animation-group": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-animation\\polymer-animation-keyframe.html": {
            "name": "..\\polymer-elements\\polymer-animation\\polymer-animation-keyframe.html",
            "modules": {},
            "classes": {
                "polymer-animation-keyframe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-animation\\polymer-animation-prop.html": {
            "name": "..\\polymer-elements\\polymer-animation\\polymer-animation-prop.html",
            "modules": {},
            "classes": {
                "polymer-animation-prop": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-animation\\polymer-animation.html": {
            "name": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "modules": {},
            "classes": {
                "polymer-animation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html": {
            "name": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "modules": {},
            "classes": {
                "polymer-collapse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-file\\polymer-file.html": {
            "name": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "modules": {},
            "classes": {
                "polymer-file": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html": {
            "name": "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html",
            "modules": {},
            "classes": {
                "polymer-flex-layout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html": {
            "name": "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html",
            "modules": {},
            "classes": {
                "polymer-jsonp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-layout\\polymer-layout.html": {
            "name": "..\\polymer-elements\\polymer-layout\\polymer-layout.html",
            "modules": {},
            "classes": {
                "polymer-layout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html": {
            "name": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "modules": {},
            "classes": {
                "polymer-localstorage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-media-query\\polymer-media-query.html": {
            "name": "..\\polymer-elements\\polymer-media-query\\polymer-media-query.html",
            "modules": {},
            "classes": {
                "polymer-media-query": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-meta\\polymer-meta.html": {
            "name": "..\\polymer-elements\\polymer-meta\\polymer-meta.html",
            "modules": {},
            "classes": {
                "polymer-meta": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html": {
            "name": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "modules": {},
            "classes": {
                "polymer-overlay": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-scrub\\polymer-scrub.html": {
            "name": "..\\polymer-elements\\polymer-scrub\\polymer-scrub.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-selection\\polymer-selection.html": {
            "name": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "modules": {},
            "classes": {
                "polymer-selection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\polymer-selector\\polymer-selector.html": {
            "name": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "modules": {},
            "classes": {
                "polymer-selector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\polymer-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-accordion\\polymer-ui-accordion.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-accordion\\polymer-ui-accordion.html",
            "modules": {},
            "classes": {
                "polymer-ui-accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "modules": {},
            "classes": {
                "polymer-ui-arrow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "modules": {},
            "classes": {
                "polymer-ui-breadcrumbs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-card\\polymer-ui-card.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-card\\polymer-ui-card.html",
            "modules": {},
            "classes": {
                "polymer-ui-card": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-collapsible\\polymer-ui-collapsible.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "modules": {},
            "classes": {
                "polymer-ui-collapsible": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-icon\\polymer-ui-icon.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-icon\\polymer-ui-icon.html",
            "modules": {},
            "classes": {
                "polymer-ui-icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-icon-button\\metadata.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-icon-button\\metadata.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "modules": {},
            "classes": {
                "polymer-ui-icon-button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-menu\\polymer-ui-menu.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-menu\\polymer-ui-menu.html",
            "modules": {},
            "classes": {
                "polymer-ui-menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "modules": {},
            "classes": {
                "polymer-ui-menu-button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-menu-item\\polymer-ui-menu-item.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "modules": {
                "Polymer UI Elements": 1
            },
            "classes": {
                "polymer-ui-menu-item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html",
            "modules": {},
            "classes": {
                "polymer-ui-nav-arrow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-pages\\polymer-ui-pages.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-pages\\polymer-ui-pages.html",
            "modules": {},
            "classes": {
                "polymer-ui-pages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-ratings\\polymer-ui-ratings.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "modules": {},
            "classes": {
                "polymer-ui-ratings": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-sidebar\\polymer-ui-sidebar.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-sidebar\\polymer-ui-sidebar.html",
            "modules": {},
            "classes": {
                "polymer-ui-sidebar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html",
            "modules": {},
            "classes": {
                "polymer-ui-sidebar-header": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-sidebar-menu\\polymer-ui-sidebar-menu.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-sidebar-menu\\polymer-ui-sidebar-menu.html",
            "modules": {},
            "classes": {
                "polymer-ui-sidebar-menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-splitter\\polymer-ui-splitter.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "modules": {},
            "classes": {
                "polymer-ui-splitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-submenu-item\\polymer-ui-submenu-item.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-submenu-item\\polymer-ui-submenu-item.html",
            "modules": {},
            "classes": {
                "polymer-ui-submenu-item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-tabs\\polymer-ui-tabs.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-tabs\\polymer-ui-tabs.html",
            "modules": {},
            "classes": {
                "polymer-ui-tabs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "modules": {},
            "classes": {
                "polymer-ui-toggle-button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\polymer-ui-toolbar\\polymer-ui-toolbar.html": {
            "name": "..\\polymer-ui-elements\\polymer-ui-toolbar\\polymer-ui-toolbar.html",
            "modules": {},
            "classes": {
                "polymer-ui-toolbar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "..\\polymer-ui-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\polymer-ui-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\addon\\edit\\closetag.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\addon\\edit\\closetag.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clojure\\clojure.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clojure\\clojure.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\cobol\\cobol.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\cobol\\cobol.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\coffeescript\\coffeescript.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\coffeescript\\coffeescript.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\livescript\\livescript.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\livescript\\livescript.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\ntriples\\ntriples.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\ntriples\\ntriples.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\scheme\\scheme.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\scheme\\scheme.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\smarty\\smarty.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\smarty\\smarty.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\tiddlywiki\\tiddlywiki.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\tiddlywiki\\tiddlywiki.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\lint\\parse-js.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\lint\\parse-js.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\vim_test.js": {
            "name": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\vim_test.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\cool-clock\\coolclock.js": {
            "name": "..\\more-elements\\cool-clock\\coolclock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js": {
            "name": "..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\index.html": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\index.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\index.html": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\index.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\index.html": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\index.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\index.html": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\index.html",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js": {
            "name": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\pixi-js\\pixi.js": {
            "name": "..\\more-elements\\pixi-js\\pixi.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js": {
            "name": "..\\more-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js": {
            "name": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "test\\polymer-flex-layout.html": {
            "name": "test\\polymer-flex-layout.html",
            "modules": {
                "Polymer Elements": 1
            },
            "classes": {
                "polymer-FLAX-layout": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Polymer Elements": {
            "name": "Polymer Elements",
            "submodules": {},
            "classes": {
                "polymer-ajax": 1,
                "polymer-xhr": 1,
                "polymer-anchor-point": 1,
                "polymer-collapse": 1,
                "polymer-file": 1,
                "polymer-flex-layout": 1,
                "polymer-jsonp": 1,
                "polymer-layout": 1,
                "polymer-localstorage": 1,
                "polymer-media-query": 1,
                "polymer-meta": 1,
                "polymer-overlay": 1,
                "polymer-selection": 1,
                "polymer-selector": 1,
                "polymer-ui-menu-button": 1,
                "polymer-FLAX-layout": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "test\\polymer-flex-layout.html",
            "line": 5
        },
        "Animation": {
            "name": "Animation",
            "submodules": {},
            "classes": {
                "polymer-animation-group": 1,
                "polymer-animation-keyframe": 1,
                "polymer-animation-prop": 1,
                "polymer-animation": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 31,
            "itemtype": "main",
            "example": [
                " toolkitchen/labs/animation2/grid-fade.html",
                " toolkitchen/labs/animation2/group.html"
            ]
        },
        "Polymer UI Elements": {
            "name": "Polymer UI Elements",
            "submodules": {},
            "classes": {
                "polymer-ui-accordion": 1,
                "polymer-ui-arrow": 1,
                "polymer-ui-breadcrumbs": 1,
                "polymer-ui-card": 1,
                "polymer-ui-collapsible": 1,
                "polymer-ui-icon": 1,
                "polymer-ui-icon-button": 1,
                "polymer-ui-menu": 1,
                "polymer-ui-menu-item": 1,
                "polymer-ui-nav-arrow": 1,
                "polymer-ui-pages": 1,
                "polymer-ui-ratings": 1,
                "polymer-ui-sidebar": 1,
                "polymer-ui-sidebar-header": 1,
                "polymer-ui-sidebar-menu": 1,
                "polymer-ui-splitter": 1,
                "polymer-ui-submenu-item": 1,
                "polymer-ui-tabs": 1,
                "polymer-ui-toggle-button": 1,
                "polymer-ui-toolbar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "..\\polymer-ui-elements\\polymer-ui-toolbar\\polymer-ui-toolbar.html",
            "line": 11
        }
    },
    "classes": {
        "polymer-ajax": {
            "name": "polymer-ajax",
            "shortname": "polymer-ajax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 10,
            "description": "polymer-ajax can be used to perform XMLHttpRequests.\n\nExample:\n\n    <polymer-ajax auto url=\"http://gdata.youtube.com/feeds/api/videos/\" \n        params='{\"alt\":\"json\", \"q\":\"chrome\"}'\n        handleAs=\"json\"\n        on-polymer-response=\"handleResponse\">\n    </polymer-ajax>"
        },
        "polymer-xhr": {
            "name": "polymer-xhr",
            "shortname": "polymer-xhr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-xhr.html",
            "line": 10,
            "description": "polymer-xhr can be used to perform XMLHttpRequests.\n\nExample:\n\n    <polymer-xhr id=\"xhr\"></polymer-xhr>\n    ...\n    this.$.xhr.request({url: url, params: params, callback: callback});"
        },
        "polymer-anchor-point": {
            "name": "polymer-anchor-point",
            "shortname": "polymer-anchor-point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-anchor-point\\polymer-anchor-point.html",
            "line": 5,
            "description": "polymer-anchor-point can be used to align two nodes. The node to\nuse as the reference position is the anchor node, and the node to\nbe positioned is the target node.\n\nBoth the anchor and target nodes should have an anchor-point\nattribute. The target node is positioned such that its anchor-point\naligns with the anchor node's anchor-point.\n\nNote: The target node is positioned with position: fixed, and will not\nscroll with the page.\n\nNote: This is meant to polyfill the `<dialog>` positioning behavior when\nan anchor is provided. Spec: http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#the-dialog-element\n\nExample:\n\n    <div id=\"anchor\" anchor-point=\"bottom left\"></div>\n    <div id=\"target\" anchor-point=\"top left\"></div>\n    <polymer-anchor-point id=\"anchor-helper\"></polymer-anchor-point>\n    <script>\n      var helper = document.querySelector('#anchor-helper');\n      helper.anchor = document.querySelector('#anchor');\n      helper.target = document.querySelector('#target');\n      helper.apply();\n    </script>"
        },
        "polymer-animation-group": {
            "name": "polymer-animation-group",
            "shortname": "polymer-animation-group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-group.html",
            "line": 12,
            "description": "Component for a group of animations."
        },
        "polymer-animation-keyframe": {
            "name": "polymer-animation-keyframe",
            "shortname": "polymer-animation-keyframe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-keyframe.html",
            "line": 3,
            "description": "Defines a keyframe in an animation. Its children should be\n`<polymer-animation-prop>` elements specifying the css\nproperty value at the keyframe."
        },
        "polymer-animation-prop": {
            "name": "polymer-animation-prop",
            "shortname": "polymer-animation-prop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-prop.html",
            "line": 3,
            "description": "A CSS property and value to use in a `<polymer-animation-keyframe>`."
        },
        "polymer-animation": {
            "name": "polymer-animation",
            "shortname": "polymer-animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 31,
            "description": "Component for a single animation.\n\nA animation component to fade out an element:\n\n    <polymer-animation id=\"fadeout\">\n      <polymer-animation-keyframe offset=\"0\">\n        <polymer-animation-prop name=\"opacity\" value=\"0\">\n        </polymer-animation-keyframe>\n      </polymer-animation-keyframe>\n      <polymer-animation-keyframe offset=\"1\">\n        <polymer-animation-prop name=\"opacity\" value=\"1\">\n        <polymer-animation-prop>\n      </polymer-animation-keyframe>\n    </polymer-animation>"
        },
        "polymer-collapse": {
            "name": "polymer-collapse",
            "shortname": "polymer-collapse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 10,
            "description": "polymer-collapse is used to add collapsible behavior to the\ntarget element.  It adjusts the height or width of the target element\nto make the element collapse and expand.\n\nExample:\n\n    <button on-click=\"toggle\">toggle collapse</button>\n    <div id=\"demo\">\n      ...\n    </div>\n    <polymer-collapse id=\"collapse\" targetId=\"demo\"></polymer-collapse>\n\n    ...\n\n    toggle: function() {\n      this.$.collapse.toggle();\n    }"
        },
        "polymer-file": {
            "name": "polymer-file",
            "shortname": "polymer-file",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 12,
            "description": "polymer-file provides File API operations.\n\nExamples:\n\n    <polymer-file id=\"file\" readas=\"dataurl\" \n                  on-polymer-result=\"handleResult\"></polymer-file>\n    ...\n    this.$.file.blob = new Blob(['abc', {type: 'text/plain'}]);\n    this.$.file.read();\n\n    ---\n\n    <polymer-file id=\"file\" readas=\"arraybuffer\" auto\n                  result=\"{{result}}\"></polymer-file>\n    ...\n    this.$.file.blob = new Blob(['abc', {type: 'text/plain'}]);"
        },
        "polymer-flex-layout": {
            "name": "polymer-flex-layout",
            "shortname": "polymer-flex-layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 10,
            "description": "polymer-flex-layout provides a helper to use CSS3 Flexible Boxes.  By putting\npolymer-flex-layout inside an element it makes the element a flex\ncontainer. Use 'flex' attribute to make the flex item flexible.\n\nExample:\n\n    <div>\n      <polymer-flex-layout></polymer-flex-layout>\n      <div>Left</div>\n      <div flex>Main</div>\n      <div>Right</div>\n    </div>\n\n    ---------------------------------\n    |-------------------------------|\n    ||Left|       Main       |Right||\n    |-------------------------------|\n    ---------------------------------\n\n    <div>\n      <polymer-flex-layout vertical></polymer-flex-layout>\n      <div>Header</div>\n      <div flex>Body</div>\n      <div>Footer</div>\n    </div>\n\n    ----------\n    ||------||\n    ||Header||\n    ||------||\n    ||Body  ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||      ||\n    ||------||\n    ||Footer||\n    ||------||\n    ----------"
        },
        "polymer-jsonp": {
            "name": "polymer-jsonp",
            "shortname": "polymer-jsonp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html",
            "line": 10,
            "description": "polymer-jsonp can be used to perform JSONP requests.\n\nExample:\n\n    <polymer-jsonp url=\"https://clients1.google.com/finance/info?q=GOOG&client=ig&callback=\"\n        response=\"{{data}}\"></polymer-jsonp>"
        },
        "polymer-layout": {
            "name": "polymer-layout",
            "shortname": "polymer-layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-layout\\polymer-layout.html",
            "line": 10,
            "description": "`<polymer-layout>` arranges nodes horizontally via absolution positioning.\nSet the `vertical` attribute (boolean) to arrange vertically instead.\n\n`<polymer-layout>` arranges it's <b>sibling elements</b>, not\nit's children.\n\nOne arranged node may be marked as elastic by giving it a `flex`\nattribute (boolean).\n\nYou may remove a node from layout by giving it a `nolayout`\nattribute (boolean).\n\nCSS Notes:\n\n * `padding` is ignored on the parent node.\n * `margin` is ignored on arranged nodes.\n * `min-width` is ignored on arranged nodes, use `min-width` on the parent node\n   instead.\n\nExample: \n\nArrange three `div` into columns. `flex` attribute on Column Two makes that\ncolumn elastic.\n\n     <polymer-layout></polymer-layout>\n     <div>Column One</div>\n     <div flex>Column Two</div>\n     <div>Column Three</div>\n\n Remember that `<polymer-layout>` arranges it's sibling elements, not it's children.\n\nIf body has width 52 device pixels (in this case, ascii characters), call that 52px.\nColumn One has it's natural width of 12px (including border), Column Three has it's\nnatural width of 14px, body border uses 2px, and Column Two automatically uses the\nremaining space: 24px.\n\n     |-                    52px                        -| \n     ----------------------------------------------------\n     ||Column One||      Column Two      ||Column Three||\n     ----------------------------------------------------\n      |-  12px  -||-     (24px)         -||    14px   -|\n\nAs the parent node resizes, the elastic column reacts via CSS to adjust it's size.\nNo javascript is used during parent resizing, for best performance. \n\nChanges in content or sibling size is not handled automatically. \n\n     --------------------------------------------------------------------------\n     ||Column One|                  Column Two                  |Column Three||\n     --------------------------------------------------------------------------\n\n     --------------------------------------\n     ||Column One|Column Two|Column Three||\n     --------------------------------------\n\nArrange in rows by adding the `vertical` attribute.\n\nExample:\n\n     <polymer-layout vertical></polymer-layout>\n     <div>Row One</div>\n     <div flex>Row Two</div>\n     <div>Row Three</div>\n\nThis setup will cause Row Two to stretch to fill the container.\n\n     -----------             -----------\n     |---------|             |---------|\n     |         |             |         |\n     |Row One  |             |Row One  |\n     |         |             |         |\n     |---------|             |---------|\n     |         |             |         |\n     |Row Two  |             |Row Two  |\n     |         |             |         |\n     |---------|             |         |\n     |         |             |         |\n     |Row Three|             |         |\n     |         |             |---------|\n     |---------|             |         |\n     -----------             |Row Three|\n                             |         |\n                             |---------|\n                             |---------|\n\nLayouts can be nested arbitrarily.\n\n     <polymer-layout></polymer-layout>\n     <div>Menu</div>\n     <div flex>\n        <polymer-layout vertical></polymer-layout>\n        <div>Title</div>\n        <div>Toolbar</div>\n        <div flex>Main</div>\n        <div>Footer</div>\n     </div>\n\nRenders something like this\n\n     --------------------------------\n     ||Menu     ||Title            ||\n     ||         ||-----------------||\n     ||         ||Toolbar          ||\n     ||         ||-----------------||\n     ||         ||Main             ||\n     ||         ||                 ||\n     ||         ||-----------------||\n     ||         ||Footer           ||\n     --------------------------------"
        },
        "polymer-localstorage": {
            "name": "polymer-localstorage",
            "shortname": "polymer-localstorage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "line": 10,
            "description": "polymer-localstorage provides access to localStorage.  The \"name\" property\nis the key to the data (\"value\" property) stored in localStorage.\n\npolymer-localstorage automatically saves the value to localStorage when\nvalue is changed.  Note that if value is an object auto-save will be\ntriggered only when value is a different instance.\n\nExample:\n\n    <polymer-localstorage name=\"my-app-storage\" value=\"{{value}}\"></polymer-localstorage>"
        },
        "polymer-media-query": {
            "name": "polymer-media-query",
            "shortname": "polymer-media-query",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-media-query\\polymer-media-query.html",
            "line": 10,
            "description": "polymer-media-query can be used to data bind to a CSS media query.\nThe \"query\" property is a bare CSS media query.\nThe \"queryMatches\" property will be a boolean representing if the page matches that media query.\n\npolymer-media-query uses media query listeners to dynamically update the \"queryMatches\" property.\nA \"polymer-mediachange\" event also fires when queryMatches changes.\n\nExample:\n\n     <polymer-media-query query=\"max-width: 640px\" queryMatches=\"{{phoneScreen}}\"></polymer-media-query>"
        },
        "polymer-meta": {
            "name": "polymer-meta",
            "shortname": "polymer-meta",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-meta\\polymer-meta.html",
            "line": 10,
            "description": "polymer-meta is used to manage metadata.  When an instance of polymer-meta\nis created, it's automatically registered and add to the metaData storage given an id\nis set on the element. Use byId() to retrive a specific polymer-meta and\nthe property \"list\" to retrieve all registered polymer-meta's."
        },
        "polymer-overlay": {
            "name": "polymer-overlay",
            "shortname": "polymer-overlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 12,
            "description": "polymer-overlay displays overlayed on top of other content. It starts\nout hidden and is displayed by setting it's opened property to true.\nA polymer-overlay's opened state can be toggled by calling the toggle\nmethod.\n\nIt's common to want a polymer-overlay to animate to its opened\nposition. A number of helper css classes provide some basic open/close\nanimations. For example, assigning the class polymer-overlay-fade to a\npolymer-overlay will make it fade into and out of view as it opens and\ncloses. Note, if multiple polymer-overlay's are opened, they should\nstack on top of each other.\n\nStyling: The size and position of a polymer-overlay should be setup\nvia css.\npolymer-overlay is natually sized around its content. When a\npolymer-overlay is opened it is shown and the 'opened' class is added\nto it. This is typically where css transitions and animations are\napplied. When the polymer-overlay is closed, the 'opened' class is\nremoved and a 'closing' class is added. Use 'closing' to customize\nthe closing animation. \n\nClasses for animating polymer-overlay:\n\n* polymer-overlay-fade: fade in/out when opened/closed\n* polymer-overlay-scale-slideup: open: fade in and shrink;\nclose: slide up\n* polymer-overlay-shake: open: fly in and shake; close: shake and\nfly out.\n\nIt's common to use polymer-overlay to gather user input, for example\na login dialog. To facilitate this, polymer-overlay supports automatic\nfocusing of a specific element when it's opened. The element to be\nfocused should be given an autofocus attribute.\n\nAn element that should close the polymer-overlay will automatically\ndo so if it is given the overlay-toggle attribute. Please note that\npolymer-overlay will close whenever the user taps outside it or\npresses the escape key. The behavior can be turned off via the\nautoCloseDisabled property.\n\n    <div>\n      <polymer-overlay></polymer-overlay>\n\t     <h2>Dialog</h2>\n      <input placeholder=\"say something...\" autofocus\"></input>\n      <div>I agree with this wholeheartedly.</div>\n      <button overlay-toggle>OK</button>\n    </div>"
        },
        "polymer-selection": {
            "name": "polymer-selection",
            "shortname": "polymer-selection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 12,
            "description": "The polymer-selection element is used to manage selection state. It has no\nvisual appearance and is typically used in conjuneciton with another element.\nFor example, <a href=\"polymer-selector.html\">polymer-selector</a>\nuse a polymer-selection to manage selection.\n\nTo mark an item as selected, call the select(item) method on \npolymer-selection. Notice that the item itself is an argument to this method.\nThe polymer-selection element manages selection state for any given set of\nitems. When an item is selected, the `polymer-select` event is fired.\nThe attribute \"multi\" indicates if multiple items can be selected at once.\n\nExample:\n\n    <polymer-element name=\"selection-example\">\n       <template>\n         <style>\n           ::-webkit-distributed(> .selected) {\n             font-weight: bold;\n             font-style: italic;\n           }\n         </style>\n         <ul on-tap=\"itemTapAction\">\n           <content></content>\n         </ul>\n         <polymer-selection id=\"selection\" multi on-polymer-select=\"selectAction\"></polymer-selection>\n       </template>\n       <script>\n         Polymer('selection-example', {\n           itemTapAction: function(e) {\n             this.$.selection.select(e.target);\n           },\n           selectAction: function(e, detail) {\n             detail.item.classList.toggle('selected', detail.isSelected);\n           }\n         });\n       </script>\n    </polymer-element>\n\n    <selection-example>\n      <li>Red</li>\n      <li>Green</li>\n      <li>Blue</li>\n    </selection-example>"
        },
        "polymer-selector": {
            "name": "polymer-selector",
            "shortname": "polymer-selector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 10,
            "description": "polymer-selector is used to manage a list of elements that can be selected.\nThe attribute \"selected\" indicates which item element is being selected.\nThe attribute \"multi\" indicates if multiple items can be selected at once.\nTapping on the item element would fire \"polymer-activate\" event. Use\n\"polymer-select\" event to listen for selection changes.\n\nExample:\n\n    <polymer-selector selected=\"0\">\n      <div>Item 1</div>\n      <div>Item 2</div>\n      <div>Item 3</div>\n    </polymer-selector>\n\npolymer-selector is not styled.  So one needs to use \"polymer-selected\" CSS\nclass to style the selected element.\n\n    <style>\n      .item.polymer-selected {\n        background: #eee;\n      }\n    </style>\n    ...\n    <polymer-selector>\n      <div class=\"item\">Item 1</div>\n      <div class=\"item\">Item 2</div>\n      <div class=\"item\">Item 3</div>\n    </polymer-selector>"
        },
        "polymer-ui-accordion": {
            "name": "polymer-ui-accordion",
            "shortname": "polymer-ui-accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-accordion\\polymer-ui-accordion.html",
            "line": 10,
            "description": "polymer-ui-accordion is a simple accordion style element.  It should \nbe used in conjunction with polymer-ui-collapsible.  By default\nonly one collapsible stays open at a time.  To have multiple\ncollapsibles open set \"multi\" property on the accordion.\n\nExample:\n\n    <polymer-ui-accordion selected=\"0\">\n      <polymer-ui-collapsible>\n        <div class=\"polymer-ui-collapsible-header\">Header 1</div>\n        <div>....</div>\n      </polymer-ui-collapsible>\n      <polymer-ui-collapsible>\n        <div class=\"polymer-ui-collapsible-header\">Header 2</div>\n        <div>....</div>\n      </polymer-ui-collapsible>\n      <polymer-ui-collapsible>\n        <div class=\"polymer-ui-collapsible-header\">Header 3</div>\n        <div>....</div>\n      </polymer-ui-collapsible>\n    </polymer-ui-accordion>",
            "extends": "polymer-selector"
        },
        "polymer-ui-arrow": {
            "name": "polymer-ui-arrow",
            "shortname": "polymer-ui-arrow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 10,
            "description": "polymer-ui-arrow is styled to look like an arrow.\n\nExample:\n\n    <polymer-ui-arrow direction=\"up\" size=\"20\"></polymer-ui-arrow>"
        },
        "polymer-ui-breadcrumbs": {
            "name": "polymer-ui-breadcrumbs",
            "shortname": "polymer-ui-breadcrumbs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 10,
            "description": "polymer-ui-breadcrumbs shows the user where they are in relation to a\nhierarchy.  Use 'crumbs' property to specify the content for breadcumbs.\n\nExample: \n\n    <polymer-ui-breadcrumbs crumbs=\"{{crumbs}}\" selectedCrumb=\"{{crumb}}\"></polymer-ui-breadcrumbs>\n\n    ....\n    this.crumbs = [\n      {label: 'Overview'}, \n      {label: 'Subitem1'}, \n      {label: 'Subitem2'},\n      {label: 'Subitem3'}\n    ];"
        },
        "polymer-ui-card": {
            "name": "polymer-ui-card",
            "shortname": "polymer-ui-card",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-card\\polymer-ui-card.html",
            "line": 11,
            "description": "polymer-ui-card <b>(WIP)</b>\n\nExample:\n\n    <polymer-ui-card>\n      ...\n    </polymer-ui-card>"
        },
        "polymer-ui-collapsible": {
            "name": "polymer-ui-collapsible",
            "shortname": "polymer-ui-collapsible",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 10,
            "description": "polymer-ui-collapsible has a header and a body and the body appears or\ndisappears based on \"active\" property.  Tapping on the header will toggle\nthe active state.  User needs to put the class \"polymer-ui-collapsible-header\"\non the element to indicate it represents a header.\n\nExample:\n\n    <polymer-ui-collapsible>\n      <div class=\"polymer-ui-collapsible-header\">Title</div>\n      <div>\n        some content...\n      </div>\n    </polymer-ui-collapsible>"
        },
        "polymer-ui-icon": {
            "name": "polymer-ui-icon",
            "shortname": "polymer-ui-icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 13,
            "description": "polymer-ui-icon is a 24x24 glyph expressed as a background-image.\n\nExample:\n\n    <polymer-ui-icon src=\"star.png\"></polymer-ui-icon>\n\nOptionally can use other size like 32x32 by setting the attribute \"size\" to \"32\":\n\n    <polymer-ui-icon src=\"big_star.png\" size=\"32\"></polymer-ui-icon>\n\nPolymer includes an icon set.  The property \"icon\" can be used\nto specify which icon to use.\n\nExample:\n\n    <polymer-ui-icon icon=\"menu\"></polymer-ui-icon>"
        },
        "polymer-ui-icon-button": {
            "name": "polymer-ui-icon-button",
            "shortname": "polymer-ui-icon-button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 10,
            "description": "polymer-ui-icon-button enables you to place an image centered in a button.\n\nExample:\n\n    <polymer-ui-icon-button src=\"star.png\"></polymer-ui-icon-button>\n\nPolymer includes an icon set.  The property \"icon\" can be used\nto specify which icon to use.\n\nExample:\n\n    <polymer-ui-icon-button icon=\"menu\"></polymer-ui-icon-button>"
        },
        "polymer-ui-menu": {
            "name": "polymer-ui-menu",
            "shortname": "polymer-ui-menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-menu\\polymer-ui-menu.html",
            "line": 10,
            "description": "polymer-ui-menu is a polymer-selector with theme propagation.  It styles to look like \na menu and should be used in conjunction with polymer-ui-menu-item.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu>\n\nThe \"selectedItem\" property returns the currently selected item.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\" selectedItem=\"{{item}}\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu>\n\n    <div>selected label: {{item.label}}</div>\n\nThe event \"polymer-select\" can also be used to listen for selection change.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\" on-polymer-select=\"selectAction\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu>\n\n    ...\n\n    selectAction: function(e, detail) {\n      if (detail.isSelected) {\n        var selectedItem = detail.item;\n        ...\n      }\n    }",
            "extends": "polymer-selector"
        },
        "polymer-ui-menu-button": {
            "name": "polymer-ui-menu-button",
            "shortname": "polymer-ui-menu-button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 10,
            "description": "polymer-ui-menu-button is a polymer-ui-icon-button with a drop down menu\nthat allows the user to select an option. The drop down menu is styled with\nan arrow pointing to the button, and can be positioned to the top or the\nbottom of the button with the valign property. The valign property aligns\nthe menu to the left or right edge of the button.\n\nExample:\n\n    <polymer-ui-menu-button selected=\"0\">\n      <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"dialog\" label=\"Dialog\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"search\" label=\"Search\"></polymer-ui-menu-item>\n    </polymer-ui-menu-button>"
        },
        "polymer-ui-menu-item": {
            "name": "polymer-ui-menu-item",
            "shortname": "polymer-ui-menu-item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 10,
            "description": "polymer-ui-menu-item is styled to look like a menu item.  It should be used\nin conjunction with polymer-ui-menu or polymer-ui-sibebar-menu.\n\nExample:\n\n    <polymer-ui-menu-item icon=\"settings\" label=\"Settings\"></polymer-ui-menu-item>"
        },
        "polymer-ui-nav-arrow": {
            "name": "polymer-ui-nav-arrow",
            "shortname": "polymer-ui-nav-arrow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html",
            "line": 10,
            "description": "polymer-ui-nav-arrow is a polymer-ui-arrow that can position itself\nbased on the target node.  This element is used in polymer-ui-sidebar-menu.\n\nExample:\n\n    <polymer-selector selectedItem=\"{{item}}\">\n      <div>Item 1</div>\n      <div>Item 2</div>\n      <div>Item 3</div>\n      <div>Item 4</div>\n      <div>Item 5</div>\n    </polymer-selector>\n    <polymer-ui-nav-arrow target=\"{{item}}\"></polymer-ui-nav-arrow>",
            "extends": "polymer-ui-arrow"
        },
        "polymer-ui-pages": {
            "name": "polymer-ui-pages",
            "shortname": "polymer-ui-pages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-pages\\polymer-ui-pages.html",
            "line": 12,
            "description": "polymer-ui-pages",
            "extends": "polymer-selector"
        },
        "polymer-ui-ratings": {
            "name": "polymer-ui-ratings",
            "shortname": "polymer-ui-ratings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "line": 14,
            "description": "polymer-ui-ratings allows users to rate items.\n\nExample:\n\n    <polymer-ui-ratings value=\"3\"></polymer-ui-ratings>\n\nBy default polymer-ui-ratings shows 5 stars but can be configured using \n\"count\" attribute:\n\n    <polymer-ui-ratings value=\"3\" count=\"10\"></polymer-ui-ratings>"
        },
        "polymer-ui-sidebar": {
            "name": "polymer-ui-sidebar",
            "shortname": "polymer-ui-sidebar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-sidebar\\polymer-ui-sidebar.html",
            "line": 10,
            "description": "polymer-ui-sidebar is a sidebar usually on the left side of the main content.\n\nExample:\n\n    <polymer-ui-sidebar label=\"Polymer\">\n        some content...\n    </polymer-ui-sidebar>"
        },
        "polymer-ui-sidebar-header": {
            "name": "polymer-ui-sidebar-header",
            "shortname": "polymer-ui-sidebar-header",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html",
            "line": 10,
            "description": "polymer-ui-sidebar-header is a header that styles to be used along with \npolymer-ui-sidebar."
        },
        "polymer-ui-sidebar-menu": {
            "name": "polymer-ui-sidebar-menu",
            "shortname": "polymer-ui-sidebar-menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-sidebar-menu\\polymer-ui-sidebar-menu.html",
            "line": 10,
            "description": "polymer-ui-sidebar-menu is a polymer-menu styled to look like a sidebar menu.\nUse it in conjunction with polymer-ui-menu-item.\n\nExample:\n\n    <polymer-ui-sidebar-menu selected=\"0\">\n      <polymer-ui-menu-item icon=\"menu\" label=\"Home\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"menu\" label=\"Explore\"></polymer-ui-menu-item>\n      <polymer-ui-menu-item icon=\"menu\" label=\"Favorites\"></polymer-ui-menu-item>\n    </polymer-ui-sidebar-menu>",
            "extends": "polymer-ui-menu"
        },
        "polymer-ui-splitter": {
            "name": "polymer-ui-splitter",
            "shortname": "polymer-ui-splitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "line": 10,
            "description": "polymer-ui-splitter provides a spilt bar and dragging on the split bar\nwill resize the sibling element.  Use the property \"direction\" to indicate\nwhich sibling to be resized and the orientation.\n\nExample:\n\n    <div class=\"flexbox\">\n      <div>left</div>\n      <polymer-ui-splitter direction=\"left\"></polymer-ui-splitter>\n      <div flex>right</div>\n    </div>\n\nFor horizontal splitter set direction to \"up\" or \"down\".\n\nExample:\n\n    <div class=\"flexbox column\">\n      <div>top</div>\n      <polymer-ui-splitter direction=\"up\"></polymer-ui-splitter>\n      <div flex>bottom</div>\n    </div>"
        },
        "polymer-ui-submenu-item": {
            "name": "polymer-ui-submenu-item",
            "shortname": "polymer-ui-submenu-item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-submenu-item\\polymer-ui-submenu-item.html",
            "line": 10,
            "description": "polymer-ui-submenu-item is a menu-item that can contains other menu-items.\nIt should be used in conjunction with polymer-ui-menu or \npolymer-ui-sibebar-menu.\n\nExample:\n\n    <polymer-ui-menu selected=\"0\">\n      <polymer-ui-submenu-item icon=\"settings\" label=\"Topics\">\n        <polymer-ui-menu-item label=\"Topics 1\"></polymer-ui-menu-item>\n        <polymer-ui-menu-item label=\"Topics 2\"></polymer-ui-menu-item>\n      </polymer-ui-submenu-item>\n      <polymer-ui-submenu-item icon=\"settings\" label=\"Favorites\">\n        <polymer-ui-menu-item label=\"Favorites 1\"></polymer-ui-menu-item>\n        <polymer-ui-menu-item label=\"Favorites 2\"></polymer-ui-menu-item>\n        <polymer-ui-menu-item label=\"Favorites 3\"></polymer-ui-menu-item>\n      </polymer-ui-submenu-item>\n    </polymer-ui-menu>",
            "extends": "polymer-ui-menu-item"
        },
        "polymer-ui-tabs": {
            "name": "polymer-ui-tabs",
            "shortname": "polymer-ui-tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-tabs\\polymer-ui-tabs.html",
            "line": 12,
            "description": "polymer-ui-tabs is a polymer-selector styled to look like a tab menu.\n\nExample:\n\n    <polymer-ui-tabs selected=\"0\">\n      <span>One</span>\n      <span>Two</span>\n      <span>Three</span>\n      <span>Four</span>\n    </polymer-ui-tabs>",
            "extends": "polymer-selector"
        },
        "polymer-ui-toggle-button": {
            "name": "polymer-ui-toggle-button",
            "shortname": "polymer-ui-toggle-button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 10,
            "description": "polymer-ui-toggle-button is a button that has one of two states (ON/OFF).\nYou can tap or drag the button to switch state.\n\nExample:\n\n    <polymer-ui-toggle-button></polymer-ui-toggle-button>"
        },
        "polymer-ui-toolbar": {
            "name": "polymer-ui-toolbar",
            "shortname": "polymer-ui-toolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer UI Elements",
            "namespace": "",
            "file": "..\\polymer-ui-elements\\polymer-ui-toolbar\\polymer-ui-toolbar.html",
            "line": 11,
            "description": "polymer-ui-toolbar is a horizontal bar containing elements that can perform actions.\n\nExample:\n\n    <polymer-ui-toolbar>\n      <polymer-ui-icon-button src=\"menu.png\" on-click=\"menuAction\"></polymer-ui-icon-button>\n      <div flex>Title</div>\n      <polymer-ui-icon-button src=\"more.png\" on-click=\"moreAction\"></polymer-ui-icon-button>\n    </polymer-ui-toolbar>\n\npolymer-ui-toolbar can adopt to smaller screen size.  If the attribute \"responsive\" is set\nand the screen size is less than the responsiveWidth (default to 800px), the toolbar will\nbe moved to the bottom of the page.\n\nExample:\n\n    <polymer-ui-toolbar>\n      <polymer-ui-icon-button icon=\"menu\"></polymer-ui-icon-button>\n      <div flex>Title</div>\n      <polymer-ui-toolbar responsive>\n        <polymer-ui-icon-button icon=\"add\"></polymer-ui-icon-button>\n        <polymer-ui-icon-button icon=\"trash\"></polymer-ui-icon-button>\n        <polymer-ui-icon-button icon=\"search\"></polymer-ui-icon-button>\n      </polymer-ui-toolbar>\n    </polymer-ui-toolbar>"
        },
        "polymer-FLAX-layout": {
            "name": "polymer-FLAX-layout",
            "shortname": "polymer-FLAX-layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Polymer Elements",
            "namespace": "",
            "file": "test\\polymer-flex-layout.html",
            "line": 5,
            "description": "polymer-flex-layout provides a helper to use CSS3 Flexible Boxes.  By putting\npolymer-flex-layout inside an element it makes the element a flex\ncontainer. Use 'flex' attribute to make the flex item flexible.\n\nExample:\n\n    <div>\n      <polymer-flex-layout></polymer-flex-layout>\n      <div>Left sidebar</div>\n      <div flex>Main content</div>\n      <div>Right sidebar</div>\n    </div>\n\n    <div>\n      <polymer-flex-layout></polymer-flex-layout vertical>\n      <div>Header</div>\n      <div flex>Body</div>\n      <div>Footer</div>\n    </div>"
        }
    },
    "classitems": [
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 23,
            "description": "Fired when a response is received.",
            "itemtype": "event",
            "name": "polymer-response",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 28,
            "description": "Fired when an error is received.",
            "itemtype": "event",
            "name": "polymer-error",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 33,
            "description": "Fired whenever a response or an error is received.",
            "itemtype": "event",
            "name": "polymer-complete",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 44,
            "description": "The URL target of the request.",
            "itemtype": "attribute",
            "name": "url",
            "type": "string",
            "default": "''",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 52,
            "description": "Specifies what data to store in the 'response' property, and\nto deliver as 'event.response' in 'response' events.\n\nOne of:\n\n   `text`: uses XHR.responseText\n   \n   `xml`: uses XHR.responseXML\n   \n   `json`: uses XHR.responseText parsed as JSON",
            "itemtype": "attribute",
            "name": "handleAs",
            "type": "string",
            "default": "'text'",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 69,
            "description": "If true, automatically performs an Ajax request when either url or params has changed.",
            "itemtype": "attribute",
            "name": "auto",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 77,
            "description": "Parameters to send to the specified URL, as JSON.",
            "itemtype": "attribute",
            "name": "params",
            "type": "string (JSON)",
            "default": "''",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 85,
            "description": "Returns the response object.",
            "itemtype": "attribute",
            "name": "response",
            "type": "Object",
            "default": "null",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 93,
            "description": "The HTTP method to use such as 'GET', 'POST', 'PUT', 'DELETE'.\nDefault is 'GET'.",
            "itemtype": "attribute",
            "name": "method",
            "type": "string",
            "default": "''",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-ajax.html",
            "line": 171,
            "description": "Performs an Ajax request to the url specified.",
            "itemtype": "method",
            "name": "go",
            "class": "polymer-ajax",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-ajax\\polymer-xhr.html",
            "line": 57,
            "description": "Sends a HTTP request to the server and returns the XHR object.",
            "itemtype": "method",
            "name": "request",
            "params": [
                {
                    "name": "inOptions",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "The url to which the request is sent.",
                            "type": "String"
                        },
                        {
                            "name": "method",
                            "description": "The HTTP method to use, default is GET.",
                            "type": "String"
                        },
                        {
                            "name": "sync",
                            "description": "By default, all requests are sent asynchronously.\n       To send synchronous requests, set to true.",
                            "type": "Boolean"
                        },
                        {
                            "name": "params",
                            "description": "Data to be sent to the server.",
                            "type": "Object"
                        },
                        {
                            "name": "body",
                            "description": "The content for the request body for POST method.",
                            "type": "Object"
                        },
                        {
                            "name": "headers",
                            "description": "HTTP request headers.",
                            "type": "Object"
                        },
                        {
                            "name": "responseType",
                            "description": "The response type. Default is 'text'.",
                            "type": "String"
                        },
                        {
                            "name": "callback",
                            "description": "Called when request is completed.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "return": {
                "description": "XHR object.",
                "type": "Object"
            },
            "class": "polymer-xhr",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-anchor-point\\polymer-anchor-point.html",
            "line": 154,
            "description": "The node to be positioned.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Node",
            "class": "polymer-anchor-point",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-anchor-point\\polymer-anchor-point.html",
            "line": 160,
            "description": "The node to align the target to.",
            "itemtype": "attribute",
            "name": "anchor",
            "type": "node",
            "class": "polymer-anchor-point",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-group.html",
            "line": 18,
            "description": "If specified the target will be assigned to all child animations.",
            "itemtype": "property",
            "name": "target",
            "type": "HTMLElement|Node",
            "optional": 1,
            "class": "polymer-animation-group",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-group.html",
            "line": 28,
            "description": "Group type. 'par' for parallel and 'seq' for sequence.",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "polymer-animation-group",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-keyframe.html",
            "line": 10,
            "description": "From 0 to 1.",
            "itemtype": "property",
            "name": "offset",
            "type": "Number",
            "class": "polymer-animation-keyframe",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-prop.html",
            "line": 8,
            "description": "CSS property name.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "required": 1,
            "class": "polymer-animation-prop",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation-prop.html",
            "line": 14,
            "description": "CSS property value.",
            "itemtype": "property",
            "name": "value",
            "required": 1,
            "class": "polymer-animation-prop",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 48,
            "description": "Fired when the animation starts",
            "itemtype": "event",
            "name": "animation-end",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 58,
            "description": "The node being animated.",
            "itemtype": "property",
            "name": "target",
            "type": "HTMLElement|Node",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 64,
            "description": "Selector for the node being animated.",
            "itemtype": "property",
            "name": "targetSelector",
            "type": "String",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 71,
            "description": "Animation keyframes specified as an array of dictionaries of\n&lt;css properties&gt;:&lt;array of values&gt; pairs. For example,",
            "itemtype": "property",
            "name": "keyframes",
            "type": "Object",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 78,
            "description": "A custom animation function. Either provide this or keyframes.",
            "itemtype": "property",
            "name": "sample",
            "type": "Function",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 85,
            "description": "The composition behavior. \"replace\", \"add\" or \"merge\".",
            "itemtype": "property",
            "name": "composite",
            "type": "String",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 92,
            "description": "Animation duration in milliseconds or 'infinity'.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number|'Infinity'",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 98,
            "description": "\"none\", \"forwards\", \"backwards\" or \"both\".",
            "itemtype": "property",
            "name": "fillMode",
            "type": "String",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 104,
            "description": "A transition timing function.",
            "itemtype": "property",
            "name": "easing",
            "type": "String",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 110,
            "description": "Number of iterations into the timed item in which to begin\nthe animation. e.g. 0.5 will cause the animation to begin\nhalfway through the first iteration.",
            "itemtype": "property",
            "name": "iterationStart",
            "type": "Number",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 118,
            "itemtype": "property",
            "name": "iterationCount",
            "type": "Number|'Infinity'",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 123,
            "description": "Delay in milliseconds.",
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 129,
            "description": "\"normal\", \"reverse\", \"alternate\" or \"alternate-reverse\".",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 135,
            "itemtype": "property",
            "name": "autoplay",
            "type": "Boolean",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 145,
            "description": "Plays the animation.",
            "itemtype": "method",
            "name": "play",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-animation\\polymer-animation.html",
            "line": 163,
            "description": "Stops the animation.",
            "itemtype": "method",
            "name": "cancel",
            "class": "polymer-animation",
            "module": "Animation"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 46,
            "description": "The id of the target element.",
            "itemtype": "attribute",
            "name": "targetId",
            "type": "string",
            "default": "''",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 54,
            "description": "The target element.",
            "itemtype": "attribute",
            "name": "target",
            "type": "object",
            "default": "null",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 62,
            "description": "If true, the orientation is horizontal; otherwise is vertical.",
            "itemtype": "attribute",
            "name": "horizontal",
            "type": "boolean",
            "default": "false",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 70,
            "description": "If true, the target element is hidden/collapsed.",
            "itemtype": "attribute",
            "name": "closed",
            "type": "boolean",
            "default": "false",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 78,
            "description": "Collapsing/expanding animation duration in second.",
            "itemtype": "attribute",
            "name": "duration",
            "type": "number",
            "default": "0.33",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 86,
            "description": "If true, the size of the target element is fixed and is set\non the element.  Otherwise it will try to \nuse auto to determine the natural size to use\nfor collapsing/expanding.",
            "itemtype": "attribute",
            "name": "fixedSize",
            "type": "boolean",
            "default": "false",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-collapse\\polymer-collapse.html",
            "line": 144,
            "description": "Toggle the closed state of the collapsible.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-collapse",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 32,
            "description": "Fired when a file read has complete.",
            "itemtype": "event",
            "name": "polymer-result",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "result",
                            "description": "The result of the read.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 39,
            "description": "Fired if there is an error in the file read.",
            "itemtype": "event",
            "name": "polymer-error",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "error",
                            "description": "Information on the error.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 58,
            "description": "Contains the result of a read operation.",
            "itemtype": "attribute",
            "name": "result",
            "type": "Blob|File",
            "default": "null",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 66,
            "description": "The Blob-like object to read.",
            "itemtype": "attribute",
            "name": "blob",
            "type": "Blob|File",
            "default": "null",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 74,
            "description": "If true, automatically performs the file read (if a blob has been set).",
            "itemtype": "attribute",
            "name": "auto",
            "type": "boolean",
            "default": "false",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-file\\polymer-file.html",
            "line": 82,
            "description": "The format the result should be returned as. One of 'arraybuffer', 'text',\n'dataurl', 'binarystring'.",
            "itemtype": "attribute",
            "name": "readas",
            "type": "string",
            "default": "'text'",
            "class": "polymer-file",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 55,
            "description": "If true, flex items are aligned vertically.",
            "itemtype": "attribute",
            "name": "vertical",
            "type": "boolean",
            "default": "false",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 62,
            "description": "Defines the default for how flex items are laid out along the cross axis on \nthe current line.  Possible values are 'start', 'center' and 'end'.",
            "itemtype": "attribute",
            "name": "align",
            "type": "string",
            "default": "''",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 70,
            "description": "Defines how flex items are laid out along the main axis on the current line.\nPossible values are 'start', 'center' and 'end'.",
            "itemtype": "attribute",
            "name": "justify",
            "type": "string",
            "default": "''",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-flex-layout\\polymer-flex-layout.html",
            "line": 78,
            "description": "If true, polymer-flex-layout is the flex container.",
            "itemtype": "attribute",
            "name": "isContainer",
            "type": "boolean",
            "default": "false",
            "class": "polymer-flex-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html",
            "line": 20,
            "description": "Fired when a response is received.",
            "itemtype": "event",
            "name": "polymer-response",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html",
            "line": 30,
            "description": "The URL target of the request.",
            "itemtype": "attribute",
            "name": "url",
            "type": "string",
            "default": "''",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html",
            "line": 38,
            "description": "Returns the response object.",
            "itemtype": "attribute",
            "name": "response",
            "type": "Object",
            "default": "null",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-jsonp\\polymer-jsonp.html",
            "line": 53,
            "description": "Performs a JSONP request to the url specified.",
            "itemtype": "method",
            "name": "go",
            "class": "polymer-jsonp",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-layout\\polymer-layout.html",
            "line": 172,
            "description": "Arrange sibling nodes end-to-end in one dimension.\n\nArrangement is horizontal unless the `vertical`\nattribute is applied on this node.",
            "itemtype": "method",
            "name": "layout",
            "class": "polymer-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "line": 24,
            "description": "Fired after it is loaded from localStorage.",
            "itemtype": "event",
            "name": "polymer-localstorage-load",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "line": 42,
            "description": "The key to the data stored in localStorage.",
            "itemtype": "attribute",
            "name": "name",
            "type": "string",
            "default": "null",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "line": 50,
            "description": "The data associated with the specified name.",
            "itemtype": "attribute",
            "name": "value",
            "type": "object",
            "default": "null",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "line": 58,
            "description": "If true, the value is stored and retrieved without JSON processing.",
            "itemtype": "attribute",
            "name": "useRaw",
            "type": "boolean",
            "default": "false",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-localstorage\\polymer-localstorage.html",
            "line": 89,
            "description": "Saves the value to localStorage.",
            "itemtype": "method",
            "name": "save",
            "class": "polymer-localstorage",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-media-query\\polymer-media-query.html",
            "line": 38,
            "description": "The Boolean return value of the media query",
            "itemtype": "attribute",
            "name": "queryMatches",
            "type": "Boolean",
            "default": "false",
            "class": "polymer-media-query",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-media-query\\polymer-media-query.html",
            "line": 45,
            "description": "The CSS media query to evaulate",
            "itemtype": "attribute",
            "name": "query",
            "type": "string",
            "default": "''",
            "class": "polymer-media-query",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 64,
            "description": "Fired when the polymer-overlay opened property is set.",
            "itemtype": "event",
            "name": "polymer-overlay-open",
            "params": [
                {
                    "name": "inDetail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "opened",
                            "description": "the opened state",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 135,
            "description": "The target element.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Object",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 142,
            "description": "Set opened to true to show an overlay and to false to hide it.\nA polymer-overlay may be made intially opened by setting its\nopened attribute.",
            "itemtype": "attribute",
            "name": "opened",
            "type": "boolean",
            "default": "false",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 151,
            "description": "By default an overlay will close automatically if the user\ntaps outside it or presses the escape key. Disable this\nbehavior by setting the autoCloseDisabled property to true.",
            "itemtype": "attribute",
            "name": "autoCloseDisabled",
            "type": "boolean",
            "default": "false",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 171,
            "description": "Toggle the opened state of the overlay.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-overlay\\polymer-overlay.html",
            "line": 319,
            "description": "Extensions of polymer-overlay should implement the resizeHandler\nmethod to adjust the size and position of the overlay when the \nbrowser window resizes.",
            "itemtype": "method",
            "name": "resizeHandler",
            "class": "polymer-overlay",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-scrub\\polymer-scrub.html",
            "line": 3,
            "description": "TODO:\n  - add easing to snap\n  - test delay\n  - multiple iterations for input animation\n  - test CustomEffect",
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 59,
            "description": "Fired when an item's selection state is changed. This event is fired both\nwhen an item is selected or deselected. The `isSelected` detail property\ncontains the selection state.",
            "itemtype": "event",
            "name": "polymer-select",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "isSelected",
                            "description": "true for selection and false for deselection",
                            "type": "Boolean"
                        },
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 82,
            "description": "If true, multiple selections are allowed.",
            "itemtype": "attribute",
            "name": "multi",
            "type": "boolean",
            "default": "false",
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 96,
            "description": "Retrieves the selected item(s).",
            "itemtype": "method",
            "name": "getSelection",
            "return": {
                "description": "Returns the selected item(s). If the multi property is true,\ngetSelection will return an array, otherwise it will return \nthe selected item or undefined if there is no selection."
            },
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 106,
            "description": "Indicates if a given item is selected.",
            "itemtype": "method",
            "name": "isSelected",
            "params": [
                {
                    "name": "item",
                    "description": "The item whose selection state should be checked.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "Returns true if `item` is selected."
            },
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 128,
            "description": "Set the selection state for a given `item`. If the multi property\nis true, then the selected state of `item` will be toggled; otherwise\nthe `item` will be selected.",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "item:",
                    "description": "The item to select.",
                    "type": "Any"
                }
            ],
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selection\\polymer-selection.html",
            "line": 143,
            "description": "Toggles the selection state for `item`.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "item:",
                    "description": "The item to toggle.",
                    "type": "Any"
                }
            ],
            "class": "polymer-selection",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 42,
            "description": "Fired when an item's selection state is changed. This event is fired both\nwhen an item is selected or deselected. The `isSelected` detail property\ncontains the selection state.",
            "itemtype": "event",
            "name": "polymer-select",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "isSelected",
                            "description": "true for selection and false for deselection",
                            "type": "Boolean"
                        },
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 52,
            "description": "Fired when an item element is tapped.",
            "itemtype": "event",
            "name": "polymer-activate",
            "params": [
                {
                    "name": "detail",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "item",
                            "description": "the item element",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 70,
            "description": "Gets or sets the selected element.  Default to use the index\nof the item element.\n\nIf you want a specific attribute value of the element to be\nused instead of index, set \"valueattr\" to that attribute name.\n\nExample:\n\n    <polymer-selector valueattr=\"label\" selected=\"foo\">\n      <div label=\"foo\"></div>\n      <div label=\"bar\"></div>\n      <div label=\"zot\"></div>\n    </polymer-selector>\n\nIn multi-selection this should be an array of values.\n\nExample:\n\n    <polymer-selector id=\"selector\" valueattr=\"label\" multi>\n      <div label=\"foo\"></div>\n      <div label=\"bar\"></div>\n      <div label=\"zot\"></div>\n    </polymer-selector>\n\n    this.$.selector.selected = ['foo', 'zot'];",
            "itemtype": "attribute",
            "name": "selected",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 102,
            "description": "If true, multiple selections are allowed.",
            "itemtype": "attribute",
            "name": "multi",
            "type": "boolean",
            "default": "false",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 110,
            "description": "Specifies the attribute to be used for \"selected\" attribute.",
            "itemtype": "attribute",
            "name": "valueattr",
            "type": "string",
            "default": "'name'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 118,
            "description": "Specifies the CSS class to be used to add to the selected element.",
            "itemtype": "attribute",
            "name": "selectedClass",
            "type": "string",
            "default": "'polymer-selected'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 126,
            "description": "Specifies the property to be used to set on the selected element\nto indicate its active state.",
            "itemtype": "attribute",
            "name": "selectedProperty",
            "type": "string",
            "default": "'active'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 135,
            "description": "Returns the currently selected element. In multi-selection this returns\nan array of selected elements.",
            "itemtype": "attribute",
            "name": "selectedItem",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 144,
            "description": "In single selection, this returns the model associated with the\nselected element.",
            "itemtype": "attribute",
            "name": "selectedModel",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 153,
            "description": "The target element that contains items.  If this is not set \npolymer-selector is the container.",
            "itemtype": "attribute",
            "name": "target",
            "type": "Object",
            "default": "null",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 162,
            "description": "This can be used to query nodes from the target node to be used for \nselection items.  Note this only works if the 'target' property is set.\n\nExample:\n\n    <polymer-selector target=\"{{$.myForm}}\" itemsSelector=\"input[type=radio]\"></polymer-selector>\n    <form id=\"myForm\">\n      <label><input type=\"radio\" name=\"color\" value=\"red\"> Red</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"green\"> Green</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"blue\"> Blue</label> <br>\n      <p>color = {{color}}</p>\n    </form>",
            "itemtype": "attribute",
            "name": "itemSelector",
            "type": "string",
            "default": "''",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\polymer-selector\\polymer-selector.html",
            "line": 181,
            "description": "The event that would be fired from the item element to indicate\nit is being selected.",
            "itemtype": "attribute",
            "name": "activateEvent",
            "type": "string",
            "default": "'tap'",
            "class": "polymer-selector",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "polymer-ui-accordion",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 46,
            "description": "Direction of the arrow.  Possible values are 'up', 'down', 'left' \nand 'right'.",
            "itemtype": "attribute",
            "name": "direction",
            "type": "string",
            "default": "'up'",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 55,
            "description": "Size of the arrow.",
            "itemtype": "attribute",
            "name": "size",
            "type": "number",
            "default": "10",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 63,
            "description": "Color of the arrow.",
            "itemtype": "attribute",
            "name": "color",
            "type": "string",
            "default": "'#fff'",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 71,
            "description": "Border color.",
            "itemtype": "attribute",
            "name": "borderColor",
            "type": "string",
            "default": "'#ccc'",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-arrow\\polymer-ui-arrow.html",
            "line": 79,
            "description": "Arrow border width.",
            "itemtype": "attribute",
            "name": "borderWidth",
            "type": "number",
            "default": "1",
            "class": "polymer-ui-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 28,
            "description": "An array of objects describing the content for breadcrumbs.\n\nExample:\n\n    this.crumbs = [\n      {label: 'Overview'}, \n      {label: 'Subitem1'}, \n      {label: 'Subitem2'},\n      {label: 'Subitem3'}\n    ];",
            "itemtype": "attribute",
            "name": "crumbs",
            "type": "object",
            "default": "null",
            "class": "polymer-ui-breadcrumbs",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-breadcrumbs\\polymer-ui-breadcrumbs.html",
            "line": 44,
            "description": "Returns the model associated with the selected crumb.",
            "itemtype": "attribute",
            "name": "selectedCrumb",
            "type": "object",
            "default": "null",
            "class": "polymer-ui-breadcrumbs",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-card\\polymer-ui-card.html",
            "line": 22,
            "description": "Fired when the card is swiped away.",
            "itemtype": "event",
            "name": "polymer-card-swipe-away",
            "class": "polymer-ui-card",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-card\\polymer-ui-card.html",
            "line": 36,
            "description": "If true, the card can be swiped.",
            "itemtype": "attribute",
            "name": "swipeable",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-card",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 43,
            "description": "If true, tapping on the header will not toggle the active state.",
            "itemtype": "attribute",
            "name": "notap",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-collapsible",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-collapsible\\polymer-ui-collapsible.html",
            "line": 51,
            "description": "If true, the body is expanded.",
            "itemtype": "attribute",
            "name": "active",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-collapsible",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 92,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 100,
            "description": "Specifies the size of the icon.",
            "itemtype": "attribute",
            "name": "size",
            "type": "string",
            "default": "24",
            "class": "polymer-ui-icon",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon\\polymer-ui-icon.html",
            "line": 108,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\metadata.html",
            "line": 27,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\metadata.html",
            "line": 34,
            "description": "If true, border is placed around the button to indicate\nactive state.",
            "itemtype": "attribute",
            "name": "active",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\metadata.html",
            "line": 42,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\metadata.html",
            "line": 52,
            "description": "If a theme is applied that includes an icon set, the index of the \nicon to display.",
            "itemtype": "attribute",
            "name": "index",
            "type": "number",
            "default": "-1",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 37,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 45,
            "description": "If true, border is placed around the button to indicate\nactive state.",
            "itemtype": "attribute",
            "name": "active",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 54,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-icon-button\\polymer-ui-icon-button.html",
            "line": 62,
            "description": "If a theme is applied that includes an icon set, the index of the \nicon to display.",
            "itemtype": "attribute",
            "name": "index",
            "type": "number",
            "default": "-1",
            "class": "polymer-ui-icon-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 54,
            "description": "The icon to display.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 61,
            "description": "The index of the selected menu item.",
            "itemtype": "attribute",
            "name": "selected",
            "type": "number",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 67,
            "description": "Set to true to open the menu.",
            "itemtype": "attribute",
            "name": "opened",
            "type": "boolean",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 73,
            "description": "Horizontally align the overlay with the button. Accepted values are\n[\"left\", \"center\", \"right\"].",
            "itemtype": "attribute",
            "name": "halign",
            "type": "string",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 80,
            "description": "Display the overlay on top or below the button. Accepted values are\n[\"top\", \"bottom\"].",
            "itemtype": "attribute",
            "name": "valign",
            "type": "string",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 104,
            "description": "Toggle the opened state of the dropdown.",
            "itemtype": "method",
            "name": "toggle",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-button\\polymer-ui-menu-button.html",
            "line": 111,
            "description": "The selected menu item.",
            "itemtype": "property",
            "name": "selection",
            "type": "Node",
            "class": "polymer-ui-menu-button",
            "module": "Polymer Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 20,
            "description": "The URL of an image for the icon.",
            "itemtype": "attribute",
            "name": "src",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-menu-item",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 27,
            "description": "Specifies the icon from the Polymer icon set.",
            "itemtype": "attribute",
            "name": "icon",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-menu-item",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-menu-item\\polymer-ui-menu-item.html",
            "line": 34,
            "description": "Specifies the label for the menu item.",
            "itemtype": "attribute",
            "name": "label",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-menu-item",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-nav-arrow\\polymer-ui-nav-arrow.html",
            "line": 28,
            "description": "The target element.",
            "itemtype": "attribute",
            "name": "target",
            "type": "object",
            "default": "null",
            "class": "polymer-ui-nav-arrow",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "line": 40,
            "description": "Number of stars to display.",
            "itemtype": "attribute",
            "name": "count",
            "type": "number",
            "default": "5",
            "class": "polymer-ui-ratings",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-ratings\\polymer-ui-ratings.html",
            "line": 48,
            "description": "Number of selected stars.",
            "itemtype": "attribute",
            "name": "value",
            "type": "number",
            "default": "0",
            "class": "polymer-ui-ratings",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-sidebar\\polymer-ui-sidebar.html",
            "line": 21,
            "description": "Sidebar header label.",
            "itemtype": "attribute",
            "name": "label",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-sidebar",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-sidebar-header\\polymer-ui-sidebar-header.html",
            "line": 16,
            "description": "Sidebar header label.",
            "itemtype": "attribute",
            "name": "label",
            "type": "string",
            "default": "''",
            "class": "polymer-ui-sidebar-header",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "line": 43,
            "description": "Possible values are \"left\", \"right\", \"up\" and \"down\".",
            "itemtype": "attribute",
            "name": "direction",
            "type": "string",
            "default": "'left'",
            "class": "polymer-ui-splitter",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-splitter\\polymer-ui-splitter.html",
            "line": 51,
            "description": "Locks the split bar so it can't be dragged.",
            "itemtype": "attribute",
            "name": "locked",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-splitter",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 33,
            "description": "Gets or sets the state, true is ON and false is OFF.",
            "itemtype": "attribute",
            "name": "value",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 41,
            "description": "If true, don't display caption.",
            "itemtype": "attribute",
            "name": "noCaption",
            "type": "boolean",
            "default": "false",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 49,
            "description": "Caption for on state.",
            "itemtype": "attribute",
            "name": "onCaption",
            "type": "string",
            "default": "'ON'",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\polymer-ui-toggle-button\\polymer-ui-toggle-button.html",
            "line": 57,
            "description": "Caption for off state.",
            "itemtype": "attribute",
            "name": "offCaption",
            "type": "string",
            "default": "'OFF'",
            "class": "polymer-ui-toggle-button",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\polymer-ui-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\addon\\edit\\closetag.js",
            "line": 1,
            "description": "Tag-closer extension for CodeMirror.\n\nThis extension adds an \"autoCloseTags\" option that can be set to\neither true to get the default behavior, or an object to further\nconfigure its behavior.\n\nThese are supported options:\n\n`whenClosing` (default true)\n  Whether to autoclose when the '/' of a closing tag is typed.\n`whenOpening` (default true)\n  Whether to autoclose the tag when the final '>' of an opening\n  tag is typed.\n`dontCloseTags` (default is empty tags for HTML, none for XML)\n  An array of tag names that should not be autoclosed.\n`indentTags` (default is block tags for HTML, none for XML)\n  An array of tag names that should, when opened, cause a\n  blank line to be added inside the tag, and the blank line and\n  closing line to be indented.\n\nSee demos/closetag.html for a usage example.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 1,
            "description": "Supported keybindings:\n\n  Motion:\n  h, j, k, l\n  gj, gk\n  e, E, w, W, b, B, ge, gE\n  f<character>, F<character>, t<character>, T<character>\n  $, ^, 0, -, +, _\n  gg, G\n  %\n  '<character>, `<character>\n\n  Operator:\n  d, y, c\n  dd, yy, cc\n  g~, g~g~\n  >, <, >>, <<\n\n  Operator-Motion:\n  x, X, D, Y, C, ~\n\n  Action:\n  a, i, s, A, I, S, o, O\n  zz, z., z<CR>, zt, zb, z-\n  J\n  u, Ctrl-r\n  m<character>\n  r<character>\n\n  Modes:\n  ESC - leave insert mode, visual mode, and clear input state.\n  Ctrl-[, Ctrl-c - same as ESC.\n\nRegisters: unamed, -, a-z, A-Z, 0-9\n  (Does not respect the special case for number registers when delete\n   operator is made with these commands: %, (, ),  , /, ?, n, N, {, } )\n  TODO: Implement the remaining registers.\nMarks: a-z, A-Z, and 0-9\n  TODO: Implement the remaining special marks. They have more complex\n      behavior.\n\nCode structure:\n 1. Default keymap\n 2. Variable declarations and short basic helpers\n 3. Instance (External API) implementation\n 4. Internal state tracking objects (input state, counter) implementation\n    and instanstiation\n 5. Key handler (the main command dispatcher) implementation\n 6. Motion, operator, and action implementations\n 7. Helper functions for the key handler, motions, operators, and actions\n 8. Set up Vim to work as a keymap for CodeMirror.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 1166,
            "description": "typedef {Object{line:number,ch:number}} Cursor An object containing the\n    position of the cursor.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 1916,
            "description": "Clips cursor to ensure that line is within the buffer's range\nIf includeLineBreak is true, then allow cur.ch == lineLength.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 2327,
            "params": [
                {
                    "name": "cm",
                    "description": "CodeMirror object.",
                    "type": "CodeMirror"
                },
                {
                    "name": "repeat",
                    "description": "Number of words to move past.",
                    "type": "Int"
                },
                {
                    "name": "forward",
                    "description": "True to search forward. False to search\n    backward.",
                    "type": "Boolean"
                },
                {
                    "name": "wordEnd",
                    "description": "True to move to end of word. False to move to\n    beginning of word.",
                    "type": "Boolean"
                },
                {
                    "name": "bigWord",
                    "description": "True if punctuation count as part of the word.\n    False if only alphabet characters count as part of the word.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The position the cursor should move to.",
                "type": "Cursor"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 2619,
            "description": "Extract the regular expression from the query and return a Regexp object.\nReturns null if the query is blank.\nIf ignoreCase is passed in, the Regexp object will have the 'i' flag set.\nIf smartCase is passed in, and the query contains upper case letters,\n  then ignoreCase is overridden, and the 'i' flag will not be set.\nIf the query contains the /i in the flag part of the regular expression,\n  then both ignoreCase and smartCase are ignored, and 'i' will be passed\n  through to the Regex object.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 2788,
            "description": "Check if pos is in the specified range, INCLUSIVE.\nRange can be specified with 1 or 2 arguments.\nIf the first range argument is an array, treat it as an array of line\nnumbers. Match pos against any of the lines.\nIf the first range argument is a number,\n  if there is only 1 range argument, check if pos has the same line\n      number\n  if there are 2 range arguments, then check if pos is in between the two\n      range arguments.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3248,
            "params": [
                {
                    "name": "cm",
                    "description": "CodeMirror instance we are in.",
                    "type": "CodeMirror"
                },
                {
                    "name": "confirm",
                    "description": "Whether to confirm each replace.",
                    "type": "Boolean"
                },
                {
                    "name": "lineStart",
                    "description": "Line to start replacing from.",
                    "type": "Cursor"
                },
                {
                    "name": "lineEnd",
                    "description": "Line to stop replacing at.",
                    "type": "Cursor"
                },
                {
                    "name": "query",
                    "description": "Query for performing matches with.",
                    "type": "RegExp"
                },
                {
                    "name": "replaceWith",
                    "description": "Text to replace matches with. May contain $1,\n    $2, etc for replacing captured groups using Javascript replace.",
                    "type": "String"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3339,
            "description": "Handle the raw key event from CodeMirror. Translate the\nShift + key modifier to the resulting letter, while preserving other\nmodifers.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3488,
            "description": "Listens for changes made in insert mode.\nShould only be active in insert mode.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3507,
            "description": "Listens for any kind of cursor activity on CodeMirror.\n- For tracking cursor activity in insert mode.\n- Should only be active in insert mode.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3523,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3528,
            "description": "Handles raw key down events from the text area.\n- Should only be active in insert mode.\n- For recording deletes in insert mode.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js",
            "line": 3546,
            "description": "Repeats the last edit, which includes exactly 1 command and at most 1\ninsert. Operator and motion commands are read from lastEditInputState,\nwhile action commands are read from lastEditActionCommand.\n\nIf repeatForInsert is true, then the function was called by\nexitInsertMode to repeat the insert mode changes the user just made. The\ncorresponding enterInsertMode call was made with a count.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 46,
            "description": "$traversableInfo",
            "define": "coll traversable collection",
            "author": "Martin Odersky",
            "version": "2.8",
            "since": "2.8",
            "tparam": "Repr the type of the actual collection containing the elements.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 107,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 110,
            "description": "By default this is implemented as the `TraversableLike` object itself,\nbut this can be overridden.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 116,
            "description": "By default this is implemented as the current collection object itself,\nbut this can be overridden.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 122,
            "description": "By default this is implemented as just a cast, but this can be overridden.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 127,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 133,
            "description": "Note: this method underlies the implementation of most other bulk operations.\n    It's important to implement this method in an efficient way.",
            "params": [
                {
                    "name": "f",
                    "description": "the function that is applied for its side-effect to every element.\n              The result of function `f` is discarded."
                }
            ],
            "tparam": "U  the type parameter describing the result of function `f`. \n              This result will always be ignored. Typically `U` is `Unit`,\n              but this is not necessary.",
            "usecase": "def foreach(f: A => Unit): Unit",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 150,
            "return": {
                "description": "`true` if the $coll contain no elements, `false` otherwise."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 165,
            "description": "All strict collections are known to have finite size. For a non-strict collection\nsuch as `Stream`, the predicate returns `true` if all elements have been computed.\nIt returns `false` if the stream is not yet evaluated to the end.\n\nNote: many collection methods will not work on collections of infinite sizes.",
            "return": {
                "description": "`true` if this collection is known to have finite size, `false` otherwise."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 188,
            "description": "It differs from ++ in that the right operand determines the type of the\nresulting collection rather than the left one.",
            "params": [
                {
                    "name": "that",
                    "description": "the traversable to append."
                },
                {
                    "name": "bf",
                    "description": "$bfinfo"
                }
            ],
            "tparam": "That  $thatinfo",
            "return": {
                "description": "a new $coll which contains all elements of this $coll\n              followed by all elements of `that`."
            },
            "usecase": "def ++:[B](that: TraversableOnce[B]): $Coll[B]",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 212,
            "description": "that of ++ because many collections override it with more efficient versions.\nSince TraversableOnce has no '++' method, we have to implement that directly,\nbut Traversable and down can use the overload.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 233,
            "params": [
                {
                    "name": "p",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "a new $coll consisting of all elements of this $coll that satisfy the given\n               predicate `p`. The order of the elements is preserved."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 246,
            "params": [
                {
                    "name": "p",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "a new $coll consisting of all elements of this $coll that do not satisfy the given\n               predicate `p`. The order of the elements is preserved."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 260,
            "description": "elements of this $coll on which the function is defined.",
            "params": [
                {
                    "name": "f",
                    "description": "the option-valued function which filters and maps the $coll."
                },
                {
                    "name": "bf",
                    "description": "$bfinfo"
                },
                {
                    "name": "pf",
                    "description": "the partial function which filters and maps the $coll."
                }
            ],
            "tparam": "That  $thatinfo",
            "return": {
                "description": "a new $coll resulting from applying the given option-valued function\n              `f` to each element and collecting all defined results.\n              The order of the elements is preserved.\n  def filterMap[B, That](f: A => Option[B])(implicit bf: CanBuildFrom[Repr, B, That]): That = \n    b.result\n  }",
                "type": "!~YUIDOC_LINE~!    val b = bf(repr)!~YUIDOC_LINE~!    for (x <- this) !~YUIDOC_LINE~!      f(x) match !~YUIDOC_LINE~!        case Some(y) => b += y!~YUIDOC_LINE~!        case _ =>!~YUIDOC_LINE~!"
            },
            "usecase": "def filterMap[B](f: A => Option[B]): $Coll[B]",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 288,
            "params": [
                {
                    "name": "p",
                    "description": "the predicate on which to partition."
                }
            ],
            "return": {
                "description": "a pair of $s: the first $coll consists of all elements that \n           satisfy the predicate `p` and the second $coll consists of all elements\n           that don't. The relative order of the elements in the resulting ${coll}s\n           is the same as in the original $coll.",
                "type": "Coll"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 316,
            "description": "$mayNotTerminateInf",
            "params": [
                {
                    "name": "p",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "`true` if the given predicate `p` holds for all elements\n                 of this $coll, otherwise `false`."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 333,
            "description": "$mayNotTerminateInf",
            "params": [
                {
                    "name": "p",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "`true` if the given predicate `p` holds for some of the\n                 elements of this $coll, otherwise `false`."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 350,
            "description": "$mayNotTerminateInf\n  $orderDependent",
            "params": [
                {
                    "name": "p",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "an option value containing the first element in the $coll\n              that satisfies `p`, or `None` if none exists."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 395,
            "description": "$orderDependent",
            "return": {
                "description": "the first element of this $coll."
            },
            "throws": [
                "`NoSuchElementException` if the $coll is empty."
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 411,
            "description": "$orderDependent",
            "return": {
                "description": "the first element of this $coll if it is nonempty, `None` if it is empty."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 417,
            "description": "$orderDependent",
            "return": {
                "description": "a $coll consisting of all elements of this $coll\n         except the first one."
            },
            "throws": [
                "`UnsupportedOperationException` if the $coll is empty."
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 428,
            "description": "$orderDependent",
            "return": {
                "description": "The last element of this $coll."
            },
            "throws": [
                "NoSuchElementException If the $coll is empty."
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 440,
            "description": "$orderDependent",
            "return": {
                "description": "the last element of this $coll$ if it is nonempty, `None` if it is empty."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 446,
            "description": "$orderDependent",
            "return": {
                "description": "a $coll consisting of all elements of this $coll\n         except the last one."
            },
            "throws": [
                "`UnsupportedOperationException` if the $coll is empty."
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 552,
            "description": "$coll and the final one will be an empty $coll, with the intervening\nvalues the results of successive applications of `tail`.",
            "return": {
                "description": "an iterator over all the tails of this $coll"
            },
            "example": [
                "  `List(1,2,3).tails = Iterator(List(1,2,3), List(2,3), List(3), Nil)`"
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 561,
            "description": "$coll and the final one will be an empty $coll, with the intervening\nvalues the results of successive applications of `init`.",
            "return": {
                "description": "an iterator over all the inits of this $coll"
            },
            "example": [
                "  `List(1,2,3).inits = Iterator(List(1,2,3), List(1,2), List(1), Nil)`"
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 570,
            "description": "Fills the given array `xs` with at most `len` elements of\nthis $coll, starting at position `start`.\nCopying will stop once either the end of the current $coll is reached,\nor the end of the array is reached, or `len` elements have been copied.\n\n$willNotTerminateInf",
            "params": [
                {
                    "name": "xs",
                    "description": "the array to fill."
                },
                {
                    "name": "start",
                    "description": "the starting index."
                },
                {
                    "name": "len",
                    "description": "the maximal number of elements to copy."
                }
            ],
            "tparam": "B      the type of the elements of the array.",
            "usecase": "def copyToArray(xs: Array[A], start: Int, len: Int): Unit",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 602,
            "return": {
                "description": "a string representation of this collection. By default this\n            string consists of the `stringPrefix` of this $coll,\n            followed by all elements separated by commas and enclosed in parentheses."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 610,
            "return": {
                "description": "a string representation which starts the result of `toString`\n           applied to this $coll. By default the string prefix is the\n           simple name of the collection class $coll."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 625,
            "return": {
                "description": "a non-strict view of this $coll."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 634,
            "description": "Note: the difference between `view` and `slice` is that `view` produces\n        a view of the current $coll, whereas `slice` produces a new $coll.\n \n  Note: `view(from, to)` is equivalent to `view.slice(from, to)`\n  $orderDependent",
            "params": [
                {
                    "name": "from",
                    "description": "the index of the first element of the view"
                },
                {
                    "name": "until",
                    "description": "the index of the element following the view"
                }
            ],
            "return": {
                "description": "a non-strict view of a slice of this $coll, starting at index `from`\n  and extending up to (but not including) index `until`."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 649,
            "description": "Note: the difference between `c filter p` and `c withFilter p` is that\n        the former creates a new collection, whereas the latter only\n        restricts the domain of subsequent `map`, `flatMap`, `foreach`,\n        and `withFilter` operations.\n  $orderDependent",
            "params": [
                {
                    "name": "p",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "an object of class `WithFilter`, which supports\n             `map`, `flatMap`, `foreach`, and `withFilter` operations.\n             All these operations apply to those elements of this $coll which\n             satisfy the predicate `p`."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 665,
            "description": "returned by method `withFilter`.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 670,
            "description": "outer $coll containing this `WithFilter` instance that satisfy predicate `p`.",
            "params": [
                {
                    "name": "f",
                    "description": "the function to apply to each element."
                },
                {
                    "name": "bf",
                    "description": "$bfinfo"
                }
            ],
            "tparam": "That  $thatinfo",
            "return": {
                "description": "a new $coll resulting from applying the given function\n              `f` to each element of the outer $coll that satisfies\n              predicate `p` and collecting the results."
            },
            "usecase": "def map[B](f: A => B): $Coll[B]",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 694,
            "description": "outer $coll containing this `WithFilter` instance that satisfy\npredicate `p` and concatenating the results.",
            "params": [
                {
                    "name": "f",
                    "description": "the function to apply to each element."
                },
                {
                    "name": "bf",
                    "description": "$bfinfo"
                }
            ],
            "tparam": "That  $thatinfo",
            "return": {
                "description": "a new $coll resulting from applying the given collection-valued function\n              `f` to each element of the outer $coll that satisfies predicate `p` and concatenating the results."
            },
            "usecase": "def flatMap[B](f: A => TraversableOnce[B]): $Coll[B]",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 719,
            "description": "this `WithFilter` instance that satisfy predicate `p`.",
            "params": [
                {
                    "name": "f",
                    "description": "the function that is applied for its side-effect to every element.\n            The result of function `f` is discarded."
                }
            ],
            "tparam": "U  the type parameter describing the result of function `f`. \n            This result will always be ignored. Typically `U` is `Unit`,\n            but this is not necessary.",
            "usecase": "def foreach(f: A => Unit): Unit",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html",
            "line": 735,
            "params": [
                {
                    "name": "q",
                    "description": "the predicate used to test elements."
                }
            ],
            "return": {
                "description": "an object of class `WithFilter`, which supports\n             `map`, `flatMap`, `foreach`, and `withFilter` operations.\n             All these operations apply to those elements of this $coll which\n             satisfy the predicate `q` in addition to the predicate `p`."
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clojure\\clojure.js",
            "line": 1,
            "description": "Author: Hans Engel\nBranched from CodeMirror's Scheme mode (by Koh Zi Han, based on implementation by Koh Zi Chun)",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clojure\\clojure.js",
            "line": 163,
            "description": "Either\n(indent-word ..\n(non-indent-word ..\n(;something else, bracket, etc.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\cobol\\cobol.js",
            "line": 1,
            "description": "Author: Gautam Mehta\nBranched from CodeMirror's Scheme mode",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\coffeescript\\coffeescript.js",
            "line": 1,
            "description": "Link to the project's GitHub page:\nhttps://github.com/pickhardt/coffeescript-codemirror-mode",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "line": 20,
            "description": "Templates with which to do compile-time manipulation of strings.\n\nMacros:\n WIKI = Phobos/StdMetastrings\n\nCopyright: Copyright Digital Mars 2007 - 2009.\nLicense:   <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\nAuthors:   $(WEB digitalmars.com, Walter Bright),\n           Don Clugston\nSource:    $(PHOBOSSRC std/_metastrings.d)",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "line": 40,
            "description": "Formats constants into a string at compile time.  Analogous to $(XREF\nstring,format).\n\nParameters:\n\nA = tuple of constants, which can be strings, characters, or integral\n    values.\n\nFormats:\n *    The formats supported are %s for strings, and %%\n *    for the % character.\nExample:\n---\nimport std.metastrings;\nimport std.stdio;\n\nvoid main()\n{\n  string s = Format!(\"Arg %s = %s\", \"foo\", 27);\n  writefln(s); // \"Arg foo = 27\"\n}\n * ---",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "line": 99,
            "description": "Convert constant argument to a string.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "line": 162,
            "description": "Parse unsigned integer literal from the start of string s.\nreturns:\n   .value = the integer literal as a string,\n   .rest = the string following the integer literal\nOtherwise:\n   .value = null,\n   .rest = s",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "line": 191,
            "description": "Parse integer literal optionally preceded by $(D '-') from the start\nof string $(D s).\n\nReturns:\n   .value = the integer literal as a string,\n   .rest = the string following the integer literal\n\nOtherwise:\n   .value = null,\n   .rest = s",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html",
            "line": 237,
            "description": "Deprecated aliases held for backward compatibility.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\livescript\\livescript.js",
            "line": 1,
            "description": "Link to the project's GitHub page:\nhttps://github.com/duralog/CodeMirror",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\ntriples\\ntriples.js",
            "line": 1,
            "description": "This script provides syntax highlighting support for\nthe Ntriples format.\nNtriples format specification:\n    http://www.w3.org/TR/rdf-testcases/#ntriples",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\scheme\\scheme.js",
            "line": 1,
            "description": "Author: Koh Zi Han, based on implementation by Koh Zi Chun",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\scheme\\scheme.js",
            "line": 170,
            "description": "Either\n(indent-word ..\n(non-indent-word ..\n(;something else, bracket, etc.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\smarty\\smarty.js",
            "line": 1,
            "description": "Smarty 2 and 3 mode.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\tiddlywiki\\tiddlywiki.js",
            "line": 1,
            "description": "|''Name''|tiddlywiki.js|\n|''Description''|Enables TiddlyWikiy syntax highlighting using CodeMirror|\n|''Author''|PMario|\n|''Version''|0.1.7|\n|''Status''|''stable''|\n|''Source''|[[GitHub|https://github.com/pmario/CodeMirror2/blob/tw-syntax/mode/tiddlywiki]]|\n|''Documentation''|http://codemirror.tiddlyspace.com/|\n|''License''|[[MIT License|http://www.opensource.org/licenses/mit-license.php]]|\n|''CoreVersion''|2.5.0|\n|''Requires''|codemirror.js|\n|''Keywords''|syntax highlighting color code mirror codemirror|\n! Info\nCoreVersion parameter is needed for TiddlyWiki only!",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\lint\\parse-js.js",
            "line": 1,
            "description": "A JavaScript tokenizer / parser / beautifier / compressor.\nThis version is suitable for Node.js.  With minimal changes (the\n  exports stuff) it should work on any JS platform.\nThis file contains the tokenizer/parser.  It is a port to JavaScript\n  of parse-js [1], a JavaScript parser library written in Common Lisp\n  by Marijn Haverbeke.  Thank you Marijn!\n[1] http://marijn.haverbeke.nl/parse-js/\nExported functions:\n  - tokenizer(code) -- returns a function.  Call the returned\n      function to fetch the next token.\n  - parse(code) -- returns an AST of the given JavaScript code.\n-------------------------------- (C) ---------------------------------\n                         Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\nDistributed under the BSD license:\n  Copyright 2010 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n  Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n      * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n      * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js",
            "line": 1,
            "description": "Helper to test CodeMirror highlighting modes. It pretty prints output of the\nhighlighter and can check against expected styles.\n\nMode tests are registered by calling test.mode(testName, mode,\ntokens), where mode is a mode object as returned by\nCodeMirror.getMode, and tokens is an array of lines that make up\nthe test.\n\nThese lines are strings, in which styled stretches of code are\nenclosed in brackets `[]`, and prefixed by their style. For\nexample, `[keyword if]`. Brackets in the code itself must be\nduplicated to prevent them from being interpreted as token\nboundaries. For example `a[[i]]` for `a[i]`. If a token has\nmultiple styles, the styles must be separated by ampersands, for\nexample `[tag&error </hmtl>]`.\n\nSee the test.js files in the css, markdown, gfm, and stex mode\ndirectories for examples.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js",
            "line": 107,
            "description": "Emulation of CodeMirror's internal highlight routine for testing. Multi-line\ninput is supported.",
            "params": [
                {
                    "name": "string",
                    "description": "to highlight"
                },
                {
                    "name": "mode",
                    "description": "the mode that will do the actual highlighting"
                }
            ],
            "return": {
                "description": "array of [style, token] pairs"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js",
            "line": 149,
            "description": "Compare two arrays of output from highlight.",
            "params": [
                {
                    "name": "o1",
                    "description": "array of [style, token] pairs"
                },
                {
                    "name": "o2",
                    "description": "array of [style, token] pairs"
                }
            ],
            "return": {
                "description": "boolean; true iff outputs equal"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js",
            "line": 165,
            "description": "Print tokens and corresponding styles in a table. Spaces in the token are\nreplaced with 'interpunct' dots (&middot;).",
            "params": [
                {
                    "name": "output",
                    "description": "array of [style, token] pairs"
                }
            ],
            "return": {
                "description": "html string"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\code-mirror\\codemirror-3.14\\test\\vim_test.js",
            "line": 265,
            "params": [
                {
                    "name": "name",
                    "description": "Name of the test"
                },
                {
                    "name": "keys",
                    "description": "An array of keys or a string with a single key to simulate."
                },
                {
                    "name": "endPos",
                    "description": "The expected end position of the cursor."
                },
                {
                    "name": "startPos",
                    "description": "The position the cursor should start at, defaults to 0, 0."
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\cool-clock\\coolclock.js",
            "line": 1,
            "description": "CoolClock 2.1.4\nCopyright 2010, Simon Baird\nReleased under the BSD License.\n\nDisplay an analog clock using canvas.\nhttp://randomibis.com/coolclock/",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js",
            "line": 19,
            "description": "Signal definitions for the Spaceships Selector\n\nDefine custom behaviour for our signals\nSee Signal section in tutorial for more info",
            "is_constructor": 1,
            "params": [
                {
                    "name": "kratu",
                    "description": "class instance.",
                    "type": "Kratu"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js",
            "line": 19,
            "description": "Signal definitions for the AdWords Health Check\nThis is a comprehensive example of an advanced signal definition\n\nIf you supply the correct data, this can provide a good starting point\nfor doing AdWords account optimiztion, but should not be considered\nan exhaustive list of possible optimization areas.\n\nSince every AdWords account behaves differently, do not rely solely\non the optimizations highlighted by this software.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "kratu",
                    "description": "class instance.",
                    "type": "Kratu"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\index.html",
            "line": 26,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js",
            "line": 19,
            "description": "Signal definitions for the Bug Report example\n\nIn this example, we use classification of tickets and departments\nto do the calculation of the weights\n\nTODO: Add more docs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "kratu",
                    "description": "class instance.",
                    "type": "Kratu"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\index.html",
            "line": 25,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\index.html",
            "line": 27,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js",
            "line": 19,
            "description": "Signal definitions for the Spaceships Selector\n\nDefine custom behaviour for our signals\nSee Signal section in tutorial for more info",
            "is_constructor": 1,
            "params": [
                {
                    "name": "kratu",
                    "description": "class instance.",
                    "type": "Kratu"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\index.html",
            "line": 23,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js",
            "line": 19,
            "description": "A simple CSV loader/parser provided with Kratu for convenience",
            "is_constructor": 1,
            "params": [
                {
                    "name": "opt_options",
                    "description": "object to controll parser behavior.",
                    "type": "Object="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js",
            "line": 30,
            "description": "Method to load and parse a CSV resource",
            "params": [
                {
                    "name": "url",
                    "description": "for resource.",
                    "type": "String"
                },
                {
                    "name": "onSuccess",
                    "description": "called after successfully loaded a resource.",
                    "type": "Function"
                },
                {
                    "name": "opt_onError",
                    "description": "(optional) error handler.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js",
            "line": 75,
            "description": "Method to parse a CSV string",
            "params": [
                {
                    "name": "csv",
                    "description": "to be parsed.",
                    "type": "String"
                },
                {
                    "name": "opt_callback",
                    "description": "(optional) called for each row of CSV data\n  when EOF is reached, opt_callback is called with null.",
                    "type": "Function="
                }
            ],
            "return": {
                "description": "array of objects parsed from CSV.",
                "type": "Array.<Object>"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js",
            "line": 19,
            "description": "A simple JSON loader",
            "is_constructor": 1,
            "params": [
                {
                    "name": "opt_options",
                    "description": "object to controll loader behavior.",
                    "type": "Object="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js",
            "line": 30,
            "description": "Method to load and parse a JSON resource",
            "params": [
                {
                    "name": "url",
                    "description": "for resource.",
                    "type": "String"
                },
                {
                    "name": "onSuccess",
                    "description": "called after successfully loaded a resource.",
                    "type": "Function"
                },
                {
                    "name": "opt_onError",
                    "description": "(optional) error handler.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 19,
            "description": "The Kratu analysis engine\nSee examples/index.html for usage and more specifc information",
            "is_constructor": 1,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 28,
            "description": "Represents the report definition of this report",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 35,
            "description": "Entities to be analysed",
            "access": "private",
            "tagname": "",
            "type": "{Array<Object>}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 42,
            "description": "Element containing the rendered report",
            "access": "private",
            "tagname": "",
            "type": "{Element}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 49,
            "description": "State flag to tell wether we've already have a rendered report or not",
            "access": "private",
            "tagname": "",
            "type": "{boolean}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 56,
            "description": "Cache for already loaded scripts",
            "access": "private",
            "tagname": "",
            "type": "{Object<string,Element>}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 63,
            "description": "The definitions of signals for this report",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 70,
            "description": "The signals of this report",
            "access": "private",
            "tagname": "",
            "type": "{Array<KratuSignal>}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 77,
            "description": "The disabled signals for this report",
            "access": "private",
            "tagname": "",
            "type": "{Object<string,boolean>}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 84,
            "description": "Current page if using pagination",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 91,
            "description": "Page size if using pagination",
            "access": "private",
            "tagname": "",
            "type": "{number}",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 98,
            "description": "Sorted array of entities with calculated scores",
            "access": "private",
            "tagname": "",
            "type": "Array< {Object} >",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 105,
            "description": "Array of summarylines to be rendered in the report",
            "access": "private",
            "tagname": "",
            "type": "Array< {Object} >",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 119,
            "description": "Default heat map colors. Can be overriden by the report definition",
            "itemtype": "property",
            "name": "{Object}",
            "final": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 130,
            "description": "Collection of built in formatters\nUsed in initialization to expose formatters in the form kratu.formatters.*",
            "return": {
                "description": ".",
                "type": "Object.<string, Function>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 192,
            "description": "Collection of built in event handlers\nUsed in initialization to expose in the form kratu.eventHandlers.*",
            "return": {
                "description": ".",
                "type": "Object.<string, Function>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 212,
            "description": "Collection of built in score calculations\nUsed in initialization to expose in the form kratu.calculations.*",
            "return": {
                "description": ".",
                "type": "Object.<string, Function>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 271,
            "description": "Method for setting a persistent setting",
            "see": [
                "#getPersistentSetting"
            ],
            "params": [
                {
                    "name": "key",
                    "description": "to get setting for.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "to be stored - is JSON.stringify'ed.",
                    "type": "String|number|Object"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 287,
            "description": "Method for getting a persistent setting",
            "see": [
                "#setPersistentSetting"
            ],
            "params": [
                {
                    "name": "key",
                    "description": "to get setting for.",
                    "type": "String"
                },
                {
                    "name": "ifNull",
                    "description": "to be returned if no persistent value for key is found\n  use this for fallback/defaults.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "JSON.parse'ed value.",
                "type": "*"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 310,
            "description": "Setter for report definition\nSee example and general documentation for structure of report definition",
            "params": [
                {
                    "name": "report",
                    "description": "containing report.",
                    "type": "Object"
                },
                {
                    "name": "opt_callback",
                    "description": "(optional), called when report is loaded.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 358,
            "description": "Getter for report definition\nSee example and general documentation for structure of report definition",
            "return": {
                "description": "containing report.",
                "type": "Object"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 369,
            "description": "Setter for signals\nUsually never set manually, use the report definition/signal definition",
            "params": [
                {
                    "name": "signals",
                    "description": "containing signal objects.",
                    "type": "Array.<Object>"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 399,
            "description": "Getter for signals",
            "return": {
                "description": "containing signal objects.",
                "type": "Array.<Object>"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 409,
            "description": "Setter for pageSize\nSetting to 0 or null clears the pageSize",
            "params": [
                {
                    "name": "opt_pageSize",
                    "description": "containing signal objects.",
                    "type": "Number="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 420,
            "description": "Getter for pageSize",
            "return": {
                "description": "or null if no pageSize is set.",
                "type": "Number"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 430,
            "description": "Method for explicitly clear the pageSize",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 439,
            "description": "Method for getting the calculated number of pages\n(No setter available as this is derived from number of entites / pageSize.)",
            "return": {
                "description": "number of pages.",
                "type": "Number"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 458,
            "description": "Setter for currentPage\nAffects render(Current|Previous|Next)Page",
            "params": [
                {
                    "name": "currentPage",
                    "description": "1-indexed page number\n Can be negative, abs(currentPage) must be <= to getNumPages.",
                    "type": "Number"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 483,
            "description": "Getter for currentPage\nDefaults to 1 if nothing is specified",
            "return": {
                "description": "current page number, 1 indexed.",
                "type": "Number"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 494,
            "description": "Setter of flag wether we have rendered a report",
            "params": [
                {
                    "name": "value",
                    "description": "rendered = true.",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 505,
            "description": "Getter of flag wether we have rendered a report",
            "return": {
                "description": "rendered = true.",
                "type": "Boolean"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 515,
            "description": "Setter of Element to be rendered to",
            "params": [
                {
                    "name": "elm",
                    "description": "If not a TABLE elm, will create.",
                    "type": "Element"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 536,
            "description": "Getter of render element",
            "return": {
                "description": "Note: Can be different to setElement.",
                "type": "Element"
            },
            "see": [
                "#setRenderElement"
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 547,
            "description": "Setter of the entities\nThese are the objects you want analyzed",
            "params": [
                {
                    "name": "entities",
                    "description": "array if objects.",
                    "type": "Array.<Object>"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 558,
            "description": "Getter of the entities",
            "return": {
                "description": "the entities.",
                "type": "Array.<Object>"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 568,
            "description": "Get the number of entities currently in the analysis",
            "return": {
                "description": "convenience method for calculating the number of entities.",
                "type": "Number"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 581,
            "description": "Setter of calculated (analyzed) entities",
            "see": [
                "#calculateEntities_"
            ],
            "params": [
                {
                    "name": "entities",
                    "description": "with score/value for each calculated entity.",
                    "type": "Array.<Object>"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 593,
            "description": "Getter of calculated (analyzed) entities",
            "see": [
                "#calculateEntities_"
            ],
            "return": {
                "description": "entities w score/value for each calculated entity.",
                "type": "Array.<Object>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 605,
            "description": "Setter of calculated (analyzed) summaries",
            "see": [
                "#calculateSummaries_"
            ],
            "params": [
                {
                    "name": "summary",
                    "description": "with score/value for summary-line.",
                    "type": "Array.<Object>"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 617,
            "description": "Getter of calculated (analyzed) summaries",
            "see": [
                "#calculateSummaries_"
            ],
            "return": {
                "description": "summary with score/value for summary-line.",
                "type": "Array.<Object>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 629,
            "description": "Method for rendering a specific page",
            "see": [
                "#setPageSize"
            ],
            "params": [
                {
                    "name": "opt_pageNumber",
                    "description": "- if no page number supplied renders page 1.",
                    "type": "Number="
                },
                {
                    "name": "opt_callback",
                    "description": "to be called when rendering is finished.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 657,
            "description": "Method for rendering the currentPage",
            "see": [
                "#setPageSize",
                "#setCurrentPage"
            ],
            "params": [
                {
                    "name": "opt_callback",
                    "description": "to be called when rendering is finished.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 672,
            "description": "Method for rendering the previousPage",
            "see": [
                "#setPageSize",
                "#setCurrentPage"
            ],
            "params": [
                {
                    "name": "opt_callback",
                    "description": "to be called when rendering is finished.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 688,
            "description": "Method for rendering the nextPage",
            "see": [
                "#setPageSize",
                "#setCurrentPage"
            ],
            "params": [
                {
                    "name": "opt_callback",
                    "description": "to be opt_called when rendering is finished.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 704,
            "description": "Method for rendering the entire report",
            "params": [
                {
                    "name": "opt_callback",
                    "description": "to be called when rendering is finished.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 718,
            "description": "Method for updating a rendered report/page\nUse this to recalculate and re-render the report",
            "params": [
                {
                    "name": "opt_callback",
                    "description": "to be called when rendering is finished.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 735,
            "description": "Method used to do the actual rendering",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "options",
                    "description": "for controlling render behaviour.",
                    "type": "Object"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 779,
            "description": "Method used to render headings",
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 809,
            "description": "Method used to render entities",
            "params": [
                {
                    "name": "from",
                    "description": "start of entities to render.",
                    "type": "Number"
                },
                {
                    "name": "to",
                    "description": "end of entities to render.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 875,
            "description": "Method used to calculate scores for all entities",
            "see": [
                "#getCalculatedEntities_"
            ],
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 957,
            "description": "Method used to calculate all summaries",
            "return": {
                "description": "with all summaries.",
                "type": "Array.<Object>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1052,
            "description": "Method for turning off/on a signal\nSignal state is stored in persistent settings",
            "params": [
                {
                    "name": "key",
                    "description": "to signal to be turned off/on.",
                    "type": "String"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1065,
            "description": "Method for showing signal adjustments",
            "see": [
                "kratuSignalAdjustments.js"
            ],
            "params": [
                {
                    "name": "signal",
                    "description": "to be adjusted.",
                    "type": "String"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1084,
            "description": "Method for attaching event handlers to an element",
            "params": [
                {
                    "name": "elm",
                    "description": "to attach the element.",
                    "type": "Element"
                },
                {
                    "name": "handlers",
                    "description": "list of handlers to attach.",
                    "type": "Object.<string,Function>"
                },
                {
                    "name": "args",
                    "description": "arguments to pass to the event handler.",
                    "type": "Object"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1121,
            "description": "Method for exporting the report in various formats",
            "params": [
                {
                    "name": "type",
                    "description": "to return, valid values is html, csv, json or object.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "report as specified by the type.",
                "type": "String"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1205,
            "description": "Method for colorizing a html element based on a score",
            "params": [
                {
                    "name": "cell",
                    "description": "to be colorized.",
                    "type": "Element"
                },
                {
                    "name": "score",
                    "description": "a score between 0.0 - 1.0.",
                    "type": "Number"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1245,
            "description": "Method for clearing a report",
            "params": [
                {
                    "name": "keepHeader",
                    "description": "flag to indicate wether to keep the header.",
                    "type": "Boolean"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1261,
            "description": "Method for asserting that we actually have something to clear\nThrows an exception if nothing to clear",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1271,
            "description": "Method for asserting that we have everything needed to render.\nThrows an exception if not",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1282,
            "description": "Method for loading a script",
            "params": [
                {
                    "name": "url",
                    "description": "of script to be loaded.",
                    "type": "String"
                },
                {
                    "name": "opt_callback",
                    "description": "to be called once loaded.",
                    "type": "Function="
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1316,
            "description": "Method for creating a 90 degree rotated SVG text element\nCSS doesn't correctly adjust space in a rotated element within a table cell",
            "params": [
                {
                    "name": "title",
                    "description": "to be rotated.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "SVG element with rotated text.",
                "type": "Element"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1351,
            "description": "Class representing a single KratuSignal",
            "is_constructor": 1,
            "params": [
                {
                    "name": "signalDefinition",
                    "description": "- can either come directly\n from the report definition or the signal definition reference in the report\n signalDefinition can consist of the following key/values:\n key : String - mandatory, identifying name of the signal\n name : String - optional, descriptive name of signal\n getData : Function - optional, method that will be called to get the data\n   for this signal. If not provided, the signals key will be used to lookup\n   the corresponding value in the account-object\n weight : Float - optional, Maximal impact signal can represent (0.0 - 100.0)\n lMax : Float - optional, lowest point of low threshold where signal\n   yields maximum opportunity. When getData <= lMax, calc. weight = weight\n lMin : Float - optional, lowest point of high threshold where signal\n   yields minimum opportunity.\n   When getData > lMin (and < hMin, if defined), calculated weight = 0\n hMin : Float - optional, lowest point of high threshold where signal\n   yields minimum opportunity.\n   When getData < hMin (and > lMin, if defined), calculated weight = 0\n hMax : Float - optional, highest point of high threshold where signal\n   yields maximum opportunity.\n   When getData >= hMax, calculated weight = weight\n scaleExponent : float - optional, used to ease the curve between\n   lMax/lMin and hMin/hMax - see adjustment of signal to visualize.\n range : Object - optional, provides boundaries for adjusting the signal and\n   should contain an object with a min, max and step key/value\n format : Function - optional, function that takes the return\n   data from getData as first argument\n isBoolean : Boolean - optional, flag to show that this is a boolean signal\n hasCalculation : Function - optional, method that determines wether to\n   calculate a score for this signal\n calculateWeight : Function - optional, overridable method for\n   calculating the score for this signal.",
                    "type": "Object"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1421,
            "description": "Method for kicking of the formatting a value and it's corresponding cell\nIf the signal defines a format function, this will be called.",
            "see": [
                "#getFormatters_"
            ],
            "params": [
                {
                    "name": "the",
                    "description": "value to apply formatting to.",
                    "type": "Number|string"
                },
                {
                    "name": "the",
                    "description": "table cell to apply formatting to.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "with potentially formatted value.",
                "type": "Number|string"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js",
            "line": 1440,
            "description": "Method for calculating the score of a signal",
            "params": [
                {
                    "name": "entity",
                    "description": "to be calculated.",
                    "type": "Object"
                },
                {
                    "name": "opt_simulation",
                    "description": "- object that can override the calculation.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "score.",
                "type": "Number"
            },
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js",
            "line": 1,
            "license": "Copyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js",
            "line": 19,
            "description": "UI Adjustments for Kratu Signals",
            "is_constructor": 1,
            "params": [
                {
                    "name": "kratu",
                    "description": "class instance.",
                    "type": "Kratu"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js",
            "line": 38,
            "description": "Method for displaying the adjustments for this signal",
            "params": [
                {
                    "name": "signal",
                    "description": "to be adjusted.",
                    "type": "KratuSignal"
                },
                {
                    "name": "onChangeCallback",
                    "description": "to be called when adjustments is made.",
                    "type": "!Function"
                }
            ],
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js",
            "line": 134,
            "description": "Method for updating the graph and sliders when a signal is adjusted",
            "params": [
                {
                    "name": "signal",
                    "description": "triggering the adjustment.",
                    "type": "KratuSignal"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js",
            "line": 203,
            "description": "Method for creating a slider element.",
            "params": [
                {
                    "name": "args",
                    "description": "for this slider.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "slider element and container element.",
                "type": "Object<string, Element>"
            },
            "access": "private",
            "tagname": "",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\pixi-js\\pixi.js",
            "line": 1,
            "license": "Pixi.JS - v1.0.0\nCopyright (c) 2012, Mat Groves\nhttp://goodboydigital.com/\n\nCompiled: 2013-04-26\n\nPixi.JS is licensed under the MIT License.\nhttp://www.opensource.org/licenses/mit-license.php",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js",
            "line": 3,
            "description": "jQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 285,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 334,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 422,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 490,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 556,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 669,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js",
            "line": 718,
            "class": "polymer-FLAX-layout",
            "module": "Polymer UI Elements"
        },
        {
            "file": "test\\polymer-flex-layout.html",
            "line": 28,
            "description": "If true, flex items are aligned vertically.",
            "itemtype": "attribute",
            "name": "vertical",
            "type": "boolean",
            "default": "false",
            "class": "polymer-FLAX-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "test\\polymer-flex-layout.html",
            "line": 35,
            "description": "Defines the default for how flex items are laid out along the cross axis on \nthe current line.  Possible values are 'start', 'center' and 'end'.",
            "itemtype": "attribute",
            "name": "align",
            "type": "string",
            "default": "''",
            "class": "polymer-FLAX-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "test\\polymer-flex-layout.html",
            "line": 43,
            "description": "Defines how flex items are laid out along the main axis on the current line.\nPossible values are 'start', 'center' and 'end'.",
            "itemtype": "attribute",
            "name": "justify",
            "type": "string",
            "default": "''",
            "class": "polymer-FLAX-layout",
            "module": "Polymer Elements"
        },
        {
            "file": "test\\polymer-flex-layout.html",
            "line": 51,
            "description": "If true, polymer-flex-layout is the flex container.",
            "itemtype": "attribute",
            "name": "isContainer",
            "type": "boolean",
            "default": "false",
            "class": "polymer-FLAX-layout",
            "module": "Polymer Elements"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\polymer-elements\\polymer-ajax\\polymer-xhr.html:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\polymer-elements\\polymer-selection\\polymer-selection.html:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ..\\polymer-elements\\polymer-selection\\polymer-selection.html:106"
        },
        {
            "message": "unknown tag: define",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: define",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: version",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: define",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: define",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:133"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:133"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:188"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:188"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:188"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:260"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:260"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:260"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:570"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:570"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:670"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:670"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:670"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:694"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:694"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:694"
        },
        {
            "message": "unknown tag: tparam",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:719"
        },
        {
            "message": "unknown tag: usecase",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:719"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " ..\\more-elements\\pixi-js\\pixi.js:1"
        },
        {
            "message": "Missing item type\nTODO:\n  - add easing to snap\n  - test delay\n  - multiple iterations for input animation\n  - test CustomEffect",
            "line": " ..\\polymer-elements\\polymer-scrub\\polymer-scrub.html:3"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\polymer-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\polymer-ui-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type\nTag-closer extension for CodeMirror.\n\nThis extension adds an \"autoCloseTags\" option that can be set to\neither true to get the default behavior, or an object to further\nconfigure its behavior.\n\nThese are supported options:\n\n`whenClosing` (default true)\n  Whether to autoclose when the '/' of a closing tag is typed.\n`whenOpening` (default true)\n  Whether to autoclose the tag when the final '>' of an opening\n  tag is typed.\n`dontCloseTags` (default is empty tags for HTML, none for XML)\n  An array of tag names that should not be autoclosed.\n`indentTags` (default is block tags for HTML, none for XML)\n  An array of tag names that should, when opened, cause a\n  blank line to be added inside the tag, and the blank line and\n  closing line to be indented.\n\nSee demos/closetag.html for a usage example.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\addon\\edit\\closetag.js:1"
        },
        {
            "message": "Missing item type\nSupported keybindings:\n\n  Motion:\n  h, j, k, l\n  gj, gk\n  e, E, w, W, b, B, ge, gE\n  f<character>, F<character>, t<character>, T<character>\n  $, ^, 0, -, +, _\n  gg, G\n  %\n  '<character>, `<character>\n\n  Operator:\n  d, y, c\n  dd, yy, cc\n  g~, g~g~\n  >, <, >>, <<\n\n  Operator-Motion:\n  x, X, D, Y, C, ~\n\n  Action:\n  a, i, s, A, I, S, o, O\n  zz, z., z<CR>, zt, zb, z-\n  J\n  u, Ctrl-r\n  m<character>\n  r<character>\n\n  Modes:\n  ESC - leave insert mode, visual mode, and clear input state.\n  Ctrl-[, Ctrl-c - same as ESC.\n\nRegisters: unamed, -, a-z, A-Z, 0-9\n  (Does not respect the special case for number registers when delete\n   operator is made with these commands: %, (, ),  , /, ?, n, N, {, } )\n  TODO: Implement the remaining registers.\nMarks: a-z, A-Z, and 0-9\n  TODO: Implement the remaining special marks. They have more complex\n      behavior.\n\nCode structure:\n 1. Default keymap\n 2. Variable declarations and short basic helpers\n 3. Instance (External API) implementation\n 4. Internal state tracking objects (input state, counter) implementation\n    and instanstiation\n 5. Key handler (the main command dispatcher) implementation\n 6. Motion, operator, and action implementations\n 7. Helper functions for the key handler, motions, operators, and actions\n 8. Set up Vim to work as a keymap for CodeMirror.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:1"
        },
        {
            "message": "Missing item type\ntypedef {Object{line:number,ch:number}} Cursor An object containing the\n    position of the cursor.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:1166"
        },
        {
            "message": "Missing item type\nClips cursor to ensure that line is within the buffer's range\nIf includeLineBreak is true, then allow cur.ch == lineLength.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:1916"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:2327"
        },
        {
            "message": "Missing item type\nExtract the regular expression from the query and return a Regexp object.\nReturns null if the query is blank.\nIf ignoreCase is passed in, the Regexp object will have the 'i' flag set.\nIf smartCase is passed in, and the query contains upper case letters,\n  then ignoreCase is overridden, and the 'i' flag will not be set.\nIf the query contains the /i in the flag part of the regular expression,\n  then both ignoreCase and smartCase are ignored, and 'i' will be passed\n  through to the Regex object.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:2619"
        },
        {
            "message": "Missing item type\nCheck if pos is in the specified range, INCLUSIVE.\nRange can be specified with 1 or 2 arguments.\nIf the first range argument is an array, treat it as an array of line\nnumbers. Match pos against any of the lines.\nIf the first range argument is a number,\n  if there is only 1 range argument, check if pos has the same line\n      number\n  if there are 2 range arguments, then check if pos is in between the two\n      range arguments.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:2788"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3248"
        },
        {
            "message": "Missing item type\nHandle the raw key event from CodeMirror. Translate the\nShift + key modifier to the resulting letter, while preserving other\nmodifers.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3339"
        },
        {
            "message": "Missing item type\nListens for changes made in insert mode.\nShould only be active in insert mode.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3488"
        },
        {
            "message": "Missing item type\nListens for any kind of cursor activity on CodeMirror.\n- For tracking cursor activity in insert mode.\n- Should only be active in insert mode.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3507"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3523"
        },
        {
            "message": "Missing item type\nHandles raw key down events from the text area.\n- Should only be active in insert mode.\n- For recording deletes in insert mode.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3528"
        },
        {
            "message": "Missing item type\nRepeats the last edit, which includes exactly 1 command and at most 1\ninsert. Operator and motion commands are read from lastEditInputState,\nwhile action commands are read from lastEditActionCommand.\n\nIf repeatForInsert is true, then the function was called by\nexitInsertMode to repeat the insert mode changes the user just made. The\ncorresponding enterInsertMode call was made with a count.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\keymap\\vim.js:3546"
        },
        {
            "message": "Missing item type\n$traversableInfo",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:46"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:107"
        },
        {
            "message": "Missing item type\nBy default this is implemented as the `TraversableLike` object itself,\nbut this can be overridden.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:110"
        },
        {
            "message": "Missing item type\nBy default this is implemented as the current collection object itself,\nbut this can be overridden.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:116"
        },
        {
            "message": "Missing item type\nBy default this is implemented as just a cast, but this can be overridden.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:122"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:127"
        },
        {
            "message": "Missing item type\nNote: this method underlies the implementation of most other bulk operations.\n    It's important to implement this method in an efficient way.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:133"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:150"
        },
        {
            "message": "Missing item type\nAll strict collections are known to have finite size. For a non-strict collection\nsuch as `Stream`, the predicate returns `true` if all elements have been computed.\nIt returns `false` if the stream is not yet evaluated to the end.\n\nNote: many collection methods will not work on collections of infinite sizes.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:165"
        },
        {
            "message": "Missing item type\nIt differs from ++ in that the right operand determines the type of the\nresulting collection rather than the left one.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:188"
        },
        {
            "message": "Missing item type\nthat of ++ because many collections override it with more efficient versions.\nSince TraversableOnce has no '++' method, we have to implement that directly,\nbut Traversable and down can use the overload.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:212"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:233"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:246"
        },
        {
            "message": "Missing item type\nelements of this $coll on which the function is defined.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:260"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:288"
        },
        {
            "message": "Missing item type\n$mayNotTerminateInf",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:316"
        },
        {
            "message": "Missing item type\n$mayNotTerminateInf",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:333"
        },
        {
            "message": "Missing item type\n$mayNotTerminateInf\n  $orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:350"
        },
        {
            "message": "Missing item type\n$orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:395"
        },
        {
            "message": "Missing item type\n$orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:411"
        },
        {
            "message": "Missing item type\n$orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:417"
        },
        {
            "message": "Missing item type\n$orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:428"
        },
        {
            "message": "Missing item type\n$orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:440"
        },
        {
            "message": "Missing item type\n$orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:446"
        },
        {
            "message": "Missing item type\n$coll and the final one will be an empty $coll, with the intervening\nvalues the results of successive applications of `tail`.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:552"
        },
        {
            "message": "Missing item type\n$coll and the final one will be an empty $coll, with the intervening\nvalues the results of successive applications of `init`.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:561"
        },
        {
            "message": "Missing item type\nFills the given array `xs` with at most `len` elements of\nthis $coll, starting at position `start`.\nCopying will stop once either the end of the current $coll is reached,\nor the end of the array is reached, or `len` elements have been copied.\n\n$willNotTerminateInf",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:570"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:602"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:610"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:625"
        },
        {
            "message": "Missing item type\nNote: the difference between `view` and `slice` is that `view` produces\n        a view of the current $coll, whereas `slice` produces a new $coll.\n \n  Note: `view(from, to)` is equivalent to `view.slice(from, to)`\n  $orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:634"
        },
        {
            "message": "Missing item type\nNote: the difference between `c filter p` and `c withFilter p` is that\n        the former creates a new collection, whereas the latter only\n        restricts the domain of subsequent `map`, `flatMap`, `foreach`,\n        and `withFilter` operations.\n  $orderDependent",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:649"
        },
        {
            "message": "Missing item type\nreturned by method `withFilter`.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:665"
        },
        {
            "message": "Missing item type\nouter $coll containing this `WithFilter` instance that satisfy predicate `p`.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:670"
        },
        {
            "message": "Missing item type\nouter $coll containing this `WithFilter` instance that satisfy\npredicate `p` and concatenating the results.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:694"
        },
        {
            "message": "Missing item type\nthis `WithFilter` instance that satisfy predicate `p`.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:719"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clike\\scala.html:735"
        },
        {
            "message": "Missing item type\nAuthor: Hans Engel\nBranched from CodeMirror's Scheme mode (by Koh Zi Han, based on implementation by Koh Zi Chun)",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clojure\\clojure.js:1"
        },
        {
            "message": "Missing item type\nEither\n(indent-word ..\n(non-indent-word ..\n(;something else, bracket, etc.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\clojure\\clojure.js:163"
        },
        {
            "message": "Missing item type\nAuthor: Gautam Mehta\nBranched from CodeMirror's Scheme mode",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\cobol\\cobol.js:1"
        },
        {
            "message": "Missing item type\nLink to the project's GitHub page:\nhttps://github.com/pickhardt/coffeescript-codemirror-mode",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\coffeescript\\coffeescript.js:1"
        },
        {
            "message": "Missing item type\nTemplates with which to do compile-time manipulation of strings.\n\nMacros:\n WIKI = Phobos/StdMetastrings\n\nCopyright: Copyright Digital Mars 2007 - 2009.\nLicense:   <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\nAuthors:   $(WEB digitalmars.com, Walter Bright),\n           Don Clugston\nSource:    $(PHOBOSSRC std/_metastrings.d)",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html:20"
        },
        {
            "message": "Missing item type\nFormats constants into a string at compile time.  Analogous to $(XREF\nstring,format).\n\nParameters:\n\nA = tuple of constants, which can be strings, characters, or integral\n    values.\n\nFormats:\n *    The formats supported are %s for strings, and %%\n *    for the % character.\nExample:\n---\nimport std.metastrings;\nimport std.stdio;\n\nvoid main()\n{\n  string s = Format!(\"Arg %s = %s\", \"foo\", 27);\n  writefln(s); // \"Arg foo = 27\"\n}\n * ---",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html:40"
        },
        {
            "message": "Missing item type\nConvert constant argument to a string.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html:99"
        },
        {
            "message": "Missing item type\nParse unsigned integer literal from the start of string s.\nreturns:\n   .value = the integer literal as a string,\n   .rest = the string following the integer literal\nOtherwise:\n   .value = null,\n   .rest = s",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html:162"
        },
        {
            "message": "Missing item type\nParse integer literal optionally preceded by $(D '-') from the start\nof string $(D s).\n\nReturns:\n   .value = the integer literal as a string,\n   .rest = the string following the integer literal\n\nOtherwise:\n   .value = null,\n   .rest = s",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html:191"
        },
        {
            "message": "Missing item type\nDeprecated aliases held for backward compatibility.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\d\\index.html:237"
        },
        {
            "message": "Missing item type\nLink to the project's GitHub page:\nhttps://github.com/duralog/CodeMirror",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\livescript\\livescript.js:1"
        },
        {
            "message": "Missing item type\nThis script provides syntax highlighting support for\nthe Ntriples format.\nNtriples format specification:\n    http://www.w3.org/TR/rdf-testcases/#ntriples",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\ntriples\\ntriples.js:1"
        },
        {
            "message": "Missing item type\nAuthor: Koh Zi Han, based on implementation by Koh Zi Chun",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\scheme\\scheme.js:1"
        },
        {
            "message": "Missing item type\nEither\n(indent-word ..\n(non-indent-word ..\n(;something else, bracket, etc.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\scheme\\scheme.js:170"
        },
        {
            "message": "Missing item type\nSmarty 2 and 3 mode.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\smarty\\smarty.js:1"
        },
        {
            "message": "Missing item type\n|''Name''|tiddlywiki.js|\n|''Description''|Enables TiddlyWikiy syntax highlighting using CodeMirror|\n|''Author''|PMario|\n|''Version''|0.1.7|\n|''Status''|''stable''|\n|''Source''|[[GitHub|https://github.com/pmario/CodeMirror2/blob/tw-syntax/mode/tiddlywiki]]|\n|''Documentation''|http://codemirror.tiddlyspace.com/|\n|''License''|[[MIT License|http://www.opensource.org/licenses/mit-license.php]]|\n|''CoreVersion''|2.5.0|\n|''Requires''|codemirror.js|\n|''Keywords''|syntax highlighting color code mirror codemirror|\n! Info\nCoreVersion parameter is needed for TiddlyWiki only!",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\mode\\tiddlywiki\\tiddlywiki.js:1"
        },
        {
            "message": "Missing item type\nA JavaScript tokenizer / parser / beautifier / compressor.\nThis version is suitable for Node.js.  With minimal changes (the\n  exports stuff) it should work on any JS platform.\nThis file contains the tokenizer/parser.  It is a port to JavaScript\n  of parse-js [1], a JavaScript parser library written in Common Lisp\n  by Marijn Haverbeke.  Thank you Marijn!\n[1] http://marijn.haverbeke.nl/parse-js/\nExported functions:\n  - tokenizer(code) -- returns a function.  Call the returned\n      function to fetch the next token.\n  - parse(code) -- returns an AST of the given JavaScript code.\n-------------------------------- (C) ---------------------------------\n                         Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\nDistributed under the BSD license:\n  Copyright 2010 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n  Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n      * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n      * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\test\\lint\\parse-js.js:1"
        },
        {
            "message": "Missing item type\nHelper to test CodeMirror highlighting modes. It pretty prints output of the\nhighlighter and can check against expected styles.\n\nMode tests are registered by calling test.mode(testName, mode,\ntokens), where mode is a mode object as returned by\nCodeMirror.getMode, and tokens is an array of lines that make up\nthe test.\n\nThese lines are strings, in which styled stretches of code are\nenclosed in brackets `[]`, and prefixed by their style. For\nexample, `[keyword if]`. Brackets in the code itself must be\nduplicated to prevent them from being interpreted as token\nboundaries. For example `a[[i]]` for `a[i]`. If a token has\nmultiple styles, the styles must be separated by ampersands, for\nexample `[tag&error </hmtl>]`.\n\nSee the test.js files in the css, markdown, gfm, and stex mode\ndirectories for examples.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js:1"
        },
        {
            "message": "Missing item type\nEmulation of CodeMirror's internal highlight routine for testing. Multi-line\ninput is supported.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js:107"
        },
        {
            "message": "Missing item type\nCompare two arrays of output from highlight.",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js:149"
        },
        {
            "message": "Missing item type\nPrint tokens and corresponding styles in a table. Spaces in the token are\nreplaced with 'interpunct' dots (&middot;).",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\test\\mode_test.js:165"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\code-mirror\\codemirror-3.14\\test\\vim_test.js:265"
        },
        {
            "message": "Missing item type\nCoolClock 2.1.4\nCopyright 2010, Simon Baird\nReleased under the BSD License.\n\nDisplay an analog clock using canvas.\nhttp://randomibis.com/coolclock/",
            "line": " ..\\more-elements\\cool-clock\\coolclock.js:1"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js:1"
        },
        {
            "message": "Missing item type\nSignal definitions for the Spaceships Selector\n\nDefine custom behaviour for our signals\nSee Signal section in tutorial for more info",
            "line": " ..\\more-elements\\g-kratu\\example\\spaceships_signaldefinition.js:19"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js:1"
        },
        {
            "message": "Missing item type\nSignal definitions for the AdWords Health Check\nThis is a comprehensive example of an advanced signal definition\n\nIf you supply the correct data, this can provide a good starting point\nfor doing AdWords account optimiztion, but should not be considered\nan exhaustive list of possible optimization areas.\n\nSince every AdWords account behaves differently, do not rely solely\non the optimizations highlighted by this software.",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\aw_signaldefinition.js:19"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\adwordshealthcheck\\index.html:26"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js:1"
        },
        {
            "message": "Missing item type\nSignal definitions for the Bug Report example\n\nIn this example, we use classification of tickets and departments\nto do the calculation of the weights\n\nTODO: Add more docs",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\bugs_signaldefinition.js:19"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\bugreport\\index.html:25"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\index.html:27"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js:1"
        },
        {
            "message": "Missing item type\nSignal definitions for the Spaceships Selector\n\nDefine custom behaviour for our signals\nSee Signal section in tutorial for more info",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\spaceshipselector\\spaceships_signaldefinition.js:19"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\examples\\index.html:23"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js:1"
        },
        {
            "message": "Missing item type\nA simple CSV loader/parser provided with Kratu for convenience",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js:19"
        },
        {
            "message": "Missing item type\nMethod to load and parse a CSV resource",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js:30"
        },
        {
            "message": "Missing item type\nMethod to parse a CSV string",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\csv.js:75"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js:1"
        },
        {
            "message": "Missing item type\nA simple JSON loader",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js:19"
        },
        {
            "message": "Missing item type\nMethod to load and parse a JSON resource",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\dataproviders\\json.js:30"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1"
        },
        {
            "message": "Missing item type\nThe Kratu analysis engine\nSee examples/index.html for usage and more specifc information",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:19"
        },
        {
            "message": "Missing item type\nRepresents the report definition of this report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:28"
        },
        {
            "message": "Missing item type\nEntities to be analysed",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:35"
        },
        {
            "message": "Missing item type\nElement containing the rendered report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:42"
        },
        {
            "message": "Missing item type\nState flag to tell wether we've already have a rendered report or not",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:49"
        },
        {
            "message": "Missing item type\nCache for already loaded scripts",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:56"
        },
        {
            "message": "Missing item type\nThe definitions of signals for this report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:63"
        },
        {
            "message": "Missing item type\nThe signals of this report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:70"
        },
        {
            "message": "Missing item type\nThe disabled signals for this report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:77"
        },
        {
            "message": "Missing item type\nCurrent page if using pagination",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:84"
        },
        {
            "message": "Missing item type\nPage size if using pagination",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:91"
        },
        {
            "message": "Missing item type\nSorted array of entities with calculated scores",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:98"
        },
        {
            "message": "Missing item type\nArray of summarylines to be rendered in the report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:105"
        },
        {
            "message": "Missing item type\nCollection of built in formatters\nUsed in initialization to expose formatters in the form kratu.formatters.*",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:130"
        },
        {
            "message": "Missing item type\nCollection of built in event handlers\nUsed in initialization to expose in the form kratu.eventHandlers.*",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:192"
        },
        {
            "message": "Missing item type\nCollection of built in score calculations\nUsed in initialization to expose in the form kratu.calculations.*",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:212"
        },
        {
            "message": "Missing item type\nMethod for setting a persistent setting",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:271"
        },
        {
            "message": "Missing item type\nMethod for getting a persistent setting",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:287"
        },
        {
            "message": "Missing item type\nSetter for report definition\nSee example and general documentation for structure of report definition",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:310"
        },
        {
            "message": "Missing item type\nGetter for report definition\nSee example and general documentation for structure of report definition",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:358"
        },
        {
            "message": "Missing item type\nSetter for signals\nUsually never set manually, use the report definition/signal definition",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:369"
        },
        {
            "message": "Missing item type\nGetter for signals",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:399"
        },
        {
            "message": "Missing item type\nSetter for pageSize\nSetting to 0 or null clears the pageSize",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:409"
        },
        {
            "message": "Missing item type\nGetter for pageSize",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:420"
        },
        {
            "message": "Missing item type\nMethod for explicitly clear the pageSize",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:430"
        },
        {
            "message": "Missing item type\nMethod for getting the calculated number of pages\n(No setter available as this is derived from number of entites / pageSize.)",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:439"
        },
        {
            "message": "Missing item type\nSetter for currentPage\nAffects render(Current|Previous|Next)Page",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:458"
        },
        {
            "message": "Missing item type\nGetter for currentPage\nDefaults to 1 if nothing is specified",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:483"
        },
        {
            "message": "Missing item type\nSetter of flag wether we have rendered a report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:494"
        },
        {
            "message": "Missing item type\nGetter of flag wether we have rendered a report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:505"
        },
        {
            "message": "Missing item type\nSetter of Element to be rendered to",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:515"
        },
        {
            "message": "Missing item type\nGetter of render element",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:536"
        },
        {
            "message": "Missing item type\nSetter of the entities\nThese are the objects you want analyzed",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:547"
        },
        {
            "message": "Missing item type\nGetter of the entities",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:558"
        },
        {
            "message": "Missing item type\nGet the number of entities currently in the analysis",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:568"
        },
        {
            "message": "Missing item type\nSetter of calculated (analyzed) entities",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:581"
        },
        {
            "message": "Missing item type\nGetter of calculated (analyzed) entities",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:593"
        },
        {
            "message": "Missing item type\nSetter of calculated (analyzed) summaries",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:605"
        },
        {
            "message": "Missing item type\nGetter of calculated (analyzed) summaries",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:617"
        },
        {
            "message": "Missing item type\nMethod for rendering a specific page",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:629"
        },
        {
            "message": "Missing item type\nMethod for rendering the currentPage",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:657"
        },
        {
            "message": "Missing item type\nMethod for rendering the previousPage",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:672"
        },
        {
            "message": "Missing item type\nMethod for rendering the nextPage",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:688"
        },
        {
            "message": "Missing item type\nMethod for rendering the entire report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:704"
        },
        {
            "message": "Missing item type\nMethod for updating a rendered report/page\nUse this to recalculate and re-render the report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:718"
        },
        {
            "message": "Missing item type\nMethod used to do the actual rendering",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:735"
        },
        {
            "message": "Missing item type\nMethod used to render headings",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:779"
        },
        {
            "message": "Missing item type\nMethod used to render entities",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:809"
        },
        {
            "message": "Missing item type\nMethod used to calculate scores for all entities",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:875"
        },
        {
            "message": "Missing item type\nMethod used to calculate all summaries",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:957"
        },
        {
            "message": "Missing item type\nMethod for turning off/on a signal\nSignal state is stored in persistent settings",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1052"
        },
        {
            "message": "Missing item type\nMethod for showing signal adjustments",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1065"
        },
        {
            "message": "Missing item type\nMethod for attaching event handlers to an element",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1084"
        },
        {
            "message": "Missing item type\nMethod for exporting the report in various formats",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1121"
        },
        {
            "message": "Missing item type\nMethod for colorizing a html element based on a score",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1205"
        },
        {
            "message": "Missing item type\nMethod for clearing a report",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1245"
        },
        {
            "message": "Missing item type\nMethod for asserting that we actually have something to clear\nThrows an exception if nothing to clear",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1261"
        },
        {
            "message": "Missing item type\nMethod for asserting that we have everything needed to render.\nThrows an exception if not",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1271"
        },
        {
            "message": "Missing item type\nMethod for loading a script",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1282"
        },
        {
            "message": "Missing item type\nMethod for creating a 90 degree rotated SVG text element\nCSS doesn't correctly adjust space in a rotated element within a table cell",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1316"
        },
        {
            "message": "Missing item type\nClass representing a single KratuSignal",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1351"
        },
        {
            "message": "Missing item type\nMethod for kicking of the formatting a value and it's corresponding cell\nIf the signal defines a format function, this will be called.",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1421"
        },
        {
            "message": "Missing item type\nMethod for calculating the score of a signal",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratu.js:1440"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js:1"
        },
        {
            "message": "Missing item type\nUI Adjustments for Kratu Signals",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js:19"
        },
        {
            "message": "Missing item type\nMethod for displaying the adjustments for this signal",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js:38"
        },
        {
            "message": "Missing item type\nMethod for updating the graph and sliders when a signal is adjusted",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js:134"
        },
        {
            "message": "Missing item type\nMethod for creating a slider element.",
            "line": " ..\\more-elements\\g-kratu\\google-kratu-bc126c1\\js\\kratuSignalAdjustments.js:203"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\pixi-js\\pixi.js:1"
        },
        {
            "message": "Missing item type\njQuery Cookie plugin\n\nCopyright (c) 2010 Klaus Hartl (stilbuero.de)\nDual licensed under the MIT and GPL licenses:\nhttp://www.opensource.org/licenses/mit-license.php\nhttp://www.gnu.org/licenses/gpl.html",
            "line": " ..\\more-elements\\tools\\doc\\themes\\dana\\js\\jquery.cookie.min.js:3"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:285"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:334"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:422"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:490"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:556"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:669"
        },
        {
            "message": "Missing item type",
            "line": " ..\\more-elements\\x-tags\\x-tag\\demo\\x-tag-components.js:718"
        }
    ]
}